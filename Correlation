---
title: "Correlation_Output"
author: Generated by BlueSky Statistics, LLC
date: "`r format(Sys.time(), '%d %B, %Y, %H:%M:%S')`" 
output:
  html_document: default
R Version: 4.1.0
BlueSkyStatistics Version: 10.0b2
---


```{r setup-libraries, echo= FALSE, eval= TRUE, include = FALSE}
library(plyr)
library(dplyr)
library(rmarkdown) 
library(kableExtra)
library(BlueSky)
library(gdata)
library(stringr)
library(openxlsx)
library(haven)
library(readr)
library(readxl)
library(data.table)
library(foreign)



# The folowing is needed if R Studio needs to Knit to PDF
#library(tinytex)
```

```{r setup-knitr-options, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, eval = TRUE)

# Will keep the one single global graphics device open for all the code chunks 
#knitr::opts_knit$set(global.device = TRUE)

# Will output all the graphics - otherwise only the last graphics will be shown
knitr::opts_knit$set(fig.keep = 'all')

# To see the fully rendered output not the markup
knitr::opts_chunk$set(results='asis')

# Comment the above and un-comment the below to see the non rendered markup output
#knitr::opts_chunk$set(results="markup")
```

```{r BSky-config, eval= TRUE, include = FALSE}
        
#To flush internally all previously run BSkyFormat() output 
BSkyGetHoldFormatObjList()

# Sets up the default HTML output styling parameters 
BSkySetHtmlStylingSetting()

# Output Data cell - decimal points/engineering notation settings
#BSkySetDecimalDigitSetting(2)
#BSkySetEngNotationSetting(TRUE)
#BSkySetRound(TRUE)
#BSkySetPvalueDisplaySetting(FALSE)

# End of config set up 
```
# Training Neuralnets, using neuralnet package

```{r}

require(neuralnet);
require(NeuralNetTools);
#Setting a seed
set.seed(12345)
#Creating the model
Alpha<-neuralnet::neuralnet( formula=Result ~ android_permission_GET_ACCOUNTS+com_sonyericsson_home_permission_BROADCAST_BADGE+android_permission_READ_PROFILE+android_permission_MANAGE_ACCOUNTS+android_permission_WRITE_SYNC_SETTINGS+android_permission_READ_EXTERNAL_STORAGE+android_permission_RECEIVE_SMS+com_android_launcher_permission_READ_SETTINGS+android_permission_WRITE_SETTINGS+com_google_android_providers_gsf_permission_READ_GSERVICES+android_permission_DOWNLOAD_WITHOUT_NOTIFICATION+android_permission_GET_TASKS+android_permission_WRITE_EXTERNAL_STORAGE+android_permission_RECORD_AUDIO+com_huawei_android_launcher_permission_CHANGE_BADGE+com_oppo_launcher_permission_READ_SETTINGS+android_permission_CHANGE_NETWORK_STATE+com_android_launcher_permission_INSTALL_SHORTCUT+android_permission_android_permission_READ_PHONE_STATE+android_permission_CALL_PHONE+android_permission_WRITE_CONTACTS+android_permission_READ_PHONE_STATE+com_samsung_android_providers_context_permission_WRITE_USE_APP_FEATURE_SURVEY+android_permission_MODIFY_AUDIO_SETTINGS+android_permission_ACCESS_LOCATION_EXTRA_COMMANDS+android_permission_INTERNET+android_permission_MOUNT_UNMOUNT_FILESYSTEMS+com_majeur_launcher_permission_UPDATE_BADGE+android_permission_AUTHENTICATE_ACCOUNTS+com_htc_launcher_permission_READ_SETTINGS+android_permission_ACCESS_WIFI_STATE+android_permission_FLASHLIGHT+android_permission_READ_APP_BADGE+android_permission_USE_CREDENTIALS+android_permission_CHANGE_CONFIGURATION+android_permission_READ_SYNC_SETTINGS+android_permission_BROADCAST_STICKY+com_anddoes_launcher_permission_UPDATE_COUNT+com_android_alarm_permission_SET_ALARM+com_google_android_c2dm_permission_RECEIVE+android_permission_KILL_BACKGROUND_PROCESSES+com_sonymobile_home_permission_PROVIDER_INSERT_BADGE+com_sec_android_provider_badge_permission_READ+android_permission_WRITE_CALENDAR+android_permission_SEND_SMS+com_huawei_android_launcher_permission_WRITE_SETTINGS+android_permission_REQUEST_INSTALL_PACKAGES+android_permission_SET_WALLPAPER_HINTS+android_permission_SET_WALLPAPER+com_oppo_launcher_permission_WRITE_SETTINGS+android_permission_RESTART_PACKAGES+me_everything_badger_permission_BADGE_COUNT_WRITE+android_permission_ACCESS_MOCK_LOCATION+android_permission_ACCESS_COARSE_LOCATION+android_permission_READ_LOGS+com_google_android_gms_permission_ACTIVITY_RECOGNITION+com_amazon_device_messaging_permission_RECEIVE+android_permission_SYSTEM_ALERT_WINDOW+android_permission_DISABLE_KEYGUARD+android_permission_USE_FINGERPRINT+me_everything_badger_permission_BADGE_COUNT_READ+android_permission_CHANGE_WIFI_STATE+android_permission_READ_CONTACTS+com_android_vending_BILLING+android_permission_READ_CALENDAR+android_permission_RECEIVE_BOOT_COMPLETED+android_permission_WAKE_LOCK+android_permission_ACCESS_FINE_LOCATION+android_permission_BLUETOOTH+android_permission_CAMERA+com_android_vending_CHECK_LICENSE+android_permission_FOREGROUND_SERVICE+android_permission_BLUETOOTH_ADMIN+android_permission_VIBRATE+android_permission_NFC+android_permission_RECEIVE_USER_PRESENT+android_permission_CLEAR_APP_CACHE+com_android_launcher_permission_UNINSTALL_SHORTCUT+com_sec_android_iap_permission_BILLING+com_htc_launcher_permission_UPDATE_SHORTCUT+com_sec_android_provider_badge_permission_WRITE+android_permission_ACCESS_NETWORK_STATE+com_google_android_finsky_permission_BIND_GET_INSTALL_REFERRER_SERVICE+com_huawei_android_launcher_permission_READ_SETTINGS+android_permission_READ_SMS+android_permission_PROCESS_INCOMING_CALLS, data = Android_attack_detect, hidden = c(5),threshold =0.01,  stepmax = 10000, rep =1, algorithm= "rprop+",learningrate.factor = list(minus = 0.5, plus = 1.2),lifesign = 'none', lifesign.step = 1000, err.fct = 'sse', act.fct = 'logistic', linear.output = TRUE,  likelihood = FALSE)
if (!is.null(Alpha))
{
    #Plotting the model
    NeuralNetTools::plotnet(Alpha)
    plot(Alpha,rep="best")
    #Listing weights
    NeuralNetTools::neuralweights(Alpha)
    #Setting attributes to support scoring
    attr(.GlobalEnv$Alpha,"depvar")="'Result'"
    attr(.GlobalEnv$Alpha,"indepvar")=paste(str_split("android_permission_GET_ACCOUNTS+com_sonyericsson_home_permission_BROADCAST_BADGE+android_permission_READ_PROFILE+android_permission_MANAGE_ACCOUNTS+android_permission_WRITE_SYNC_SETTINGS+android_permission_READ_EXTERNAL_STORAGE+android_permission_RECEIVE_SMS+com_android_launcher_permission_READ_SETTINGS+android_permission_WRITE_SETTINGS+com_google_android_providers_gsf_permission_READ_GSERVICES+android_permission_DOWNLOAD_WITHOUT_NOTIFICATION+android_permission_GET_TASKS+android_permission_WRITE_EXTERNAL_STORAGE+android_permission_RECORD_AUDIO+com_huawei_android_launcher_permission_CHANGE_BADGE+com_oppo_launcher_permission_READ_SETTINGS+android_permission_CHANGE_NETWORK_STATE+com_android_launcher_permission_INSTALL_SHORTCUT+android_permission_android_permission_READ_PHONE_STATE+android_permission_CALL_PHONE+android_permission_WRITE_CONTACTS+android_permission_READ_PHONE_STATE+com_samsung_android_providers_context_permission_WRITE_USE_APP_FEATURE_SURVEY+android_permission_MODIFY_AUDIO_SETTINGS+android_permission_ACCESS_LOCATION_EXTRA_COMMANDS+android_permission_INTERNET+android_permission_MOUNT_UNMOUNT_FILESYSTEMS+com_majeur_launcher_permission_UPDATE_BADGE+android_permission_AUTHENTICATE_ACCOUNTS+com_htc_launcher_permission_READ_SETTINGS+android_permission_ACCESS_WIFI_STATE+android_permission_FLASHLIGHT+android_permission_READ_APP_BADGE+android_permission_USE_CREDENTIALS+android_permission_CHANGE_CONFIGURATION+android_permission_READ_SYNC_SETTINGS+android_permission_BROADCAST_STICKY+com_anddoes_launcher_permission_UPDATE_COUNT+com_android_alarm_permission_SET_ALARM+com_google_android_c2dm_permission_RECEIVE+android_permission_KILL_BACKGROUND_PROCESSES+com_sonymobile_home_permission_PROVIDER_INSERT_BADGE+com_sec_android_provider_badge_permission_READ+android_permission_WRITE_CALENDAR+android_permission_SEND_SMS+com_huawei_android_launcher_permission_WRITE_SETTINGS+android_permission_REQUEST_INSTALL_PACKAGES+android_permission_SET_WALLPAPER_HINTS+android_permission_SET_WALLPAPER+com_oppo_launcher_permission_WRITE_SETTINGS+android_permission_RESTART_PACKAGES+me_everything_badger_permission_BADGE_COUNT_WRITE+android_permission_ACCESS_MOCK_LOCATION+android_permission_ACCESS_COARSE_LOCATION+android_permission_READ_LOGS+com_google_android_gms_permission_ACTIVITY_RECOGNITION+com_amazon_device_messaging_permission_RECEIVE+android_permission_SYSTEM_ALERT_WINDOW+android_permission_DISABLE_KEYGUARD+android_permission_USE_FINGERPRINT+me_everything_badger_permission_BADGE_COUNT_READ+android_permission_CHANGE_WIFI_STATE+android_permission_READ_CONTACTS+com_android_vending_BILLING+android_permission_READ_CALENDAR+android_permission_RECEIVE_BOOT_COMPLETED+android_permission_WAKE_LOCK+android_permission_ACCESS_FINE_LOCATION+android_permission_BLUETOOTH+android_permission_CAMERA+com_android_vending_CHECK_LICENSE+android_permission_FOREGROUND_SERVICE+android_permission_BLUETOOTH_ADMIN+android_permission_VIBRATE+android_permission_NFC+android_permission_RECEIVE_USER_PRESENT+android_permission_CLEAR_APP_CACHE+com_android_launcher_permission_UNINSTALL_SHORTCUT+com_sec_android_iap_permission_BILLING+com_htc_launcher_permission_UPDATE_SHORTCUT+com_sec_android_provider_badge_permission_WRITE+android_permission_ACCESS_NETWORK_STATE+com_google_android_finsky_permission_BIND_GET_INSTALL_REFERRER_SERVICE+com_huawei_android_launcher_permission_READ_SETTINGS+android_permission_READ_SMS+android_permission_PROCESS_INCOMING_CALLS",fixed("+")),sep=",", collapse="")
    attr(.GlobalEnv$Alpha,"classDepVar")= class(Android_attack_detect[, c("Result")])
    attr(.GlobalEnv$Alpha,"depVarSample")= sample(Android_attack_detect[, c("Result")], size = 2, replace = TRUE)
}

```
# Random Forest

```{r}

require(randomForest);
require(stringr)
BSkyRandomForestModel1 <-NULL
BSkyRandomForestModel1<-randomForest(x = Android_attack_detect[,c('android_permission_GET_ACCOUNTS','com_sonyericsson_home_permission_BROADCAST_BADGE','android_permission_READ_PROFILE','android_permission_MANAGE_ACCOUNTS','android_permission_WRITE_SYNC_SETTINGS','android_permission_READ_EXTERNAL_STORAGE','android_permission_RECEIVE_SMS','com_android_launcher_permission_READ_SETTINGS','android_permission_WRITE_SETTINGS','com_google_android_providers_gsf_permission_READ_GSERVICES','android_permission_DOWNLOAD_WITHOUT_NOTIFICATION','android_permission_GET_TASKS','android_permission_WRITE_EXTERNAL_STORAGE','android_permission_RECORD_AUDIO','com_huawei_android_launcher_permission_CHANGE_BADGE','com_oppo_launcher_permission_READ_SETTINGS','android_permission_CHANGE_NETWORK_STATE','com_android_launcher_permission_INSTALL_SHORTCUT','android_permission_android_permission_READ_PHONE_STATE','android_permission_CALL_PHONE','android_permission_WRITE_CONTACTS','android_permission_READ_PHONE_STATE','com_samsung_android_providers_context_permission_WRITE_USE_APP_FEATURE_SURVEY','android_permission_MODIFY_AUDIO_SETTINGS','android_permission_ACCESS_LOCATION_EXTRA_COMMANDS','android_permission_INTERNET','android_permission_MOUNT_UNMOUNT_FILESYSTEMS','com_majeur_launcher_permission_UPDATE_BADGE','android_permission_AUTHENTICATE_ACCOUNTS','com_htc_launcher_permission_READ_SETTINGS','android_permission_ACCESS_WIFI_STATE','android_permission_FLASHLIGHT','android_permission_READ_APP_BADGE','android_permission_USE_CREDENTIALS','android_permission_CHANGE_CONFIGURATION','android_permission_READ_SYNC_SETTINGS','android_permission_BROADCAST_STICKY','com_anddoes_launcher_permission_UPDATE_COUNT','com_android_alarm_permission_SET_ALARM','com_google_android_c2dm_permission_RECEIVE','android_permission_KILL_BACKGROUND_PROCESSES','com_sonymobile_home_permission_PROVIDER_INSERT_BADGE','com_sec_android_provider_badge_permission_READ','android_permission_WRITE_CALENDAR','android_permission_SEND_SMS','com_huawei_android_launcher_permission_WRITE_SETTINGS','android_permission_REQUEST_INSTALL_PACKAGES','android_permission_SET_WALLPAPER_HINTS','android_permission_SET_WALLPAPER','com_oppo_launcher_permission_WRITE_SETTINGS','android_permission_RESTART_PACKAGES','me_everything_badger_permission_BADGE_COUNT_WRITE','android_permission_ACCESS_MOCK_LOCATION','android_permission_ACCESS_COARSE_LOCATION','android_permission_READ_LOGS','com_google_android_gms_permission_ACTIVITY_RECOGNITION','com_amazon_device_messaging_permission_RECEIVE','android_permission_SYSTEM_ALERT_WINDOW','android_permission_DISABLE_KEYGUARD','android_permission_USE_FINGERPRINT','me_everything_badger_permission_BADGE_COUNT_READ','android_permission_CHANGE_WIFI_STATE','android_permission_READ_CONTACTS','com_android_vending_BILLING','android_permission_READ_CALENDAR','android_permission_RECEIVE_BOOT_COMPLETED','android_permission_WAKE_LOCK','android_permission_ACCESS_FINE_LOCATION','android_permission_BLUETOOTH','android_permission_CAMERA','com_android_vending_CHECK_LICENSE','android_permission_FOREGROUND_SERVICE','android_permission_BLUETOOTH_ADMIN','android_permission_VIBRATE','android_permission_NFC','android_permission_RECEIVE_USER_PRESENT','android_permission_CLEAR_APP_CACHE','com_android_launcher_permission_UNINSTALL_SHORTCUT','com_sec_android_iap_permission_BILLING','com_htc_launcher_permission_UPDATE_SHORTCUT','com_sec_android_provider_badge_permission_WRITE','android_permission_ACCESS_NETWORK_STATE','com_google_android_finsky_permission_BIND_GET_INSTALL_REFERRER_SERVICE','com_huawei_android_launcher_permission_READ_SETTINGS','android_permission_READ_SMS','android_permission_PROCESS_INCOMING_CALLS')], y=Android_attack_detect$Result, ntree=500,  proximity =FALSE, importance =TRUE) 
#logic to show error msg if model is not generated because someone ran it on columns with NA
if( !exists('BSkyRandomForestModel1' ) || is.null(BSkyRandomForestModel1) )
{
    cat('\nError: Couldn\'t generate model.')
} else
{
    bskyret <- BSkyPrintRandomForest(BSkyRandomForestModel1)
    BSkyFormat(bskyret)
    BSkyFormat(BSkyRandomForestModel1$importance, singleTableOutputHeader = "Variable Importance Table")
            #Adding attributes to support scoring
    attr(.GlobalEnv$BSkyRandomForestModel1,"depvar") = paste ("'", sub(".*\\$", "", 'Android_attack_detect$Result'), "'", sep="")
    attr(.GlobalEnv$BSkyRandomForestModel1,"indepvar") ="'android_permission_GET_ACCOUNTS','com_sonyericsson_home_permission_BROADCAST_BADGE','android_permission_READ_PROFILE','android_permission_MANAGE_ACCOUNTS','android_permission_WRITE_SYNC_SETTINGS','android_permission_READ_EXTERNAL_STORAGE','android_permission_RECEIVE_SMS','com_android_launcher_permission_READ_SETTINGS','android_permission_WRITE_SETTINGS','com_google_android_providers_gsf_permission_READ_GSERVICES','android_permission_DOWNLOAD_WITHOUT_NOTIFICATION','android_permission_GET_TASKS','android_permission_WRITE_EXTERNAL_STORAGE','android_permission_RECORD_AUDIO','com_huawei_android_launcher_permission_CHANGE_BADGE','com_oppo_launcher_permission_READ_SETTINGS','android_permission_CHANGE_NETWORK_STATE','com_android_launcher_permission_INSTALL_SHORTCUT','android_permission_android_permission_READ_PHONE_STATE','android_permission_CALL_PHONE','android_permission_WRITE_CONTACTS','android_permission_READ_PHONE_STATE','com_samsung_android_providers_context_permission_WRITE_USE_APP_FEATURE_SURVEY','android_permission_MODIFY_AUDIO_SETTINGS','android_permission_ACCESS_LOCATION_EXTRA_COMMANDS','android_permission_INTERNET','android_permission_MOUNT_UNMOUNT_FILESYSTEMS','com_majeur_launcher_permission_UPDATE_BADGE','android_permission_AUTHENTICATE_ACCOUNTS','com_htc_launcher_permission_READ_SETTINGS','android_permission_ACCESS_WIFI_STATE','android_permission_FLASHLIGHT','android_permission_READ_APP_BADGE','android_permission_USE_CREDENTIALS','android_permission_CHANGE_CONFIGURATION','android_permission_READ_SYNC_SETTINGS','android_permission_BROADCAST_STICKY','com_anddoes_launcher_permission_UPDATE_COUNT','com_android_alarm_permission_SET_ALARM','com_google_android_c2dm_permission_RECEIVE','android_permission_KILL_BACKGROUND_PROCESSES','com_sonymobile_home_permission_PROVIDER_INSERT_BADGE','com_sec_android_provider_badge_permission_READ','android_permission_WRITE_CALENDAR','android_permission_SEND_SMS','com_huawei_android_launcher_permission_WRITE_SETTINGS','android_permission_REQUEST_INSTALL_PACKAGES','android_permission_SET_WALLPAPER_HINTS','android_permission_SET_WALLPAPER','com_oppo_launcher_permission_WRITE_SETTINGS','android_permission_RESTART_PACKAGES','me_everything_badger_permission_BADGE_COUNT_WRITE','android_permission_ACCESS_MOCK_LOCATION','android_permission_ACCESS_COARSE_LOCATION','android_permission_READ_LOGS','com_google_android_gms_permission_ACTIVITY_RECOGNITION','com_amazon_device_messaging_permission_RECEIVE','android_permission_SYSTEM_ALERT_WINDOW','android_permission_DISABLE_KEYGUARD','android_permission_USE_FINGERPRINT','me_everything_badger_permission_BADGE_COUNT_READ','android_permission_CHANGE_WIFI_STATE','android_permission_READ_CONTACTS','com_android_vending_BILLING','android_permission_READ_CALENDAR','android_permission_RECEIVE_BOOT_COMPLETED','android_permission_WAKE_LOCK','android_permission_ACCESS_FINE_LOCATION','android_permission_BLUETOOTH','android_permission_CAMERA','com_android_vending_CHECK_LICENSE','android_permission_FOREGROUND_SERVICE','android_permission_BLUETOOTH_ADMIN','android_permission_VIBRATE','android_permission_NFC','android_permission_RECEIVE_USER_PRESENT','android_permission_CLEAR_APP_CACHE','com_android_launcher_permission_UNINSTALL_SHORTCUT','com_sec_android_iap_permission_BILLING','com_htc_launcher_permission_UPDATE_SHORTCUT','com_sec_android_provider_badge_permission_WRITE','android_permission_ACCESS_NETWORK_STATE','com_google_android_finsky_permission_BIND_GET_INSTALL_REFERRER_SERVICE','com_huawei_android_launcher_permission_READ_SETTINGS','android_permission_READ_SMS','android_permission_PROCESS_INCOMING_CALLS'"
    attr(.GlobalEnv$BSkyRandomForestModel1,"classDepVar") = class(Android_attack_detect$Result)
    attr(.GlobalEnv$BSkyRandomForestModel1,"depVarSample") = sample(Android_attack_detect$Result, size = 2, replace = TRUE)
}

```
# Multi-layer Perceptron, using RSNNS package

```{r}

require(RSNNS);
require(NeuralNetTools);
#Setting a seed
set.seed(987654)
#Creating the model
if ( class(Android_attack_detect[, c('Result')]) == "factor")
{
    Beta<-mlp( x=Android_attack_detect[, c('android_permission_GET_ACCOUNTS','com_sonyericsson_home_permission_BROADCAST_BADGE','android_permission_READ_PROFILE','android_permission_MANAGE_ACCOUNTS','android_permission_WRITE_SYNC_SETTINGS','android_permission_READ_EXTERNAL_STORAGE','android_permission_RECEIVE_SMS','com_android_launcher_permission_READ_SETTINGS','android_permission_WRITE_SETTINGS','com_google_android_providers_gsf_permission_READ_GSERVICES','android_permission_DOWNLOAD_WITHOUT_NOTIFICATION','android_permission_GET_TASKS','android_permission_WRITE_EXTERNAL_STORAGE','android_permission_RECORD_AUDIO','com_huawei_android_launcher_permission_CHANGE_BADGE','com_oppo_launcher_permission_READ_SETTINGS','android_permission_CHANGE_NETWORK_STATE','com_android_launcher_permission_INSTALL_SHORTCUT','android_permission_android_permission_READ_PHONE_STATE','android_permission_CALL_PHONE','android_permission_WRITE_CONTACTS','android_permission_READ_PHONE_STATE','com_samsung_android_providers_context_permission_WRITE_USE_APP_FEATURE_SURVEY','android_permission_MODIFY_AUDIO_SETTINGS','android_permission_ACCESS_LOCATION_EXTRA_COMMANDS','android_permission_INTERNET','android_permission_MOUNT_UNMOUNT_FILESYSTEMS','com_majeur_launcher_permission_UPDATE_BADGE','android_permission_AUTHENTICATE_ACCOUNTS','com_htc_launcher_permission_READ_SETTINGS','android_permission_ACCESS_WIFI_STATE','android_permission_FLASHLIGHT','android_permission_READ_APP_BADGE','android_permission_USE_CREDENTIALS','android_permission_CHANGE_CONFIGURATION','android_permission_READ_SYNC_SETTINGS','android_permission_BROADCAST_STICKY','com_anddoes_launcher_permission_UPDATE_COUNT','com_android_alarm_permission_SET_ALARM','com_google_android_c2dm_permission_RECEIVE','android_permission_KILL_BACKGROUND_PROCESSES','com_sonymobile_home_permission_PROVIDER_INSERT_BADGE','com_sec_android_provider_badge_permission_READ','android_permission_WRITE_CALENDAR','android_permission_SEND_SMS','com_huawei_android_launcher_permission_WRITE_SETTINGS','android_permission_REQUEST_INSTALL_PACKAGES','android_permission_SET_WALLPAPER_HINTS','android_permission_SET_WALLPAPER','com_oppo_launcher_permission_WRITE_SETTINGS','android_permission_RESTART_PACKAGES','me_everything_badger_permission_BADGE_COUNT_WRITE','android_permission_ACCESS_MOCK_LOCATION','android_permission_ACCESS_COARSE_LOCATION','android_permission_READ_LOGS','com_google_android_gms_permission_ACTIVITY_RECOGNITION','com_amazon_device_messaging_permission_RECEIVE','android_permission_SYSTEM_ALERT_WINDOW','android_permission_DISABLE_KEYGUARD','android_permission_USE_FINGERPRINT','me_everything_badger_permission_BADGE_COUNT_READ','android_permission_CHANGE_WIFI_STATE','android_permission_READ_CONTACTS','com_android_vending_BILLING','android_permission_READ_CALENDAR','android_permission_RECEIVE_BOOT_COMPLETED','android_permission_WAKE_LOCK','android_permission_ACCESS_FINE_LOCATION','android_permission_BLUETOOTH','android_permission_CAMERA','com_android_vending_CHECK_LICENSE','android_permission_FOREGROUND_SERVICE','android_permission_BLUETOOTH_ADMIN','android_permission_VIBRATE','android_permission_NFC','android_permission_RECEIVE_USER_PRESENT','android_permission_CLEAR_APP_CACHE','com_android_launcher_permission_UNINSTALL_SHORTCUT','com_sec_android_iap_permission_BILLING','com_htc_launcher_permission_UPDATE_SHORTCUT','com_sec_android_provider_badge_permission_WRITE','android_permission_ACCESS_NETWORK_STATE','com_google_android_finsky_permission_BIND_GET_INSTALL_REFERRER_SERVICE','com_huawei_android_launcher_permission_READ_SETTINGS','android_permission_READ_SMS','android_permission_PROCESS_INCOMING_CALLS')], y=RSNNS::decodeClassLabels(Android_attack_detect[, c('Result')]), size = c(9), maxit = 100,
    learnFunc = "BackpropMomentum" )
} else
{
    Beta<-mlp( x=Android_attack_detect[, c('android_permission_GET_ACCOUNTS','com_sonyericsson_home_permission_BROADCAST_BADGE','android_permission_READ_PROFILE','android_permission_MANAGE_ACCOUNTS','android_permission_WRITE_SYNC_SETTINGS','android_permission_READ_EXTERNAL_STORAGE','android_permission_RECEIVE_SMS','com_android_launcher_permission_READ_SETTINGS','android_permission_WRITE_SETTINGS','com_google_android_providers_gsf_permission_READ_GSERVICES','android_permission_DOWNLOAD_WITHOUT_NOTIFICATION','android_permission_GET_TASKS','android_permission_WRITE_EXTERNAL_STORAGE','android_permission_RECORD_AUDIO','com_huawei_android_launcher_permission_CHANGE_BADGE','com_oppo_launcher_permission_READ_SETTINGS','android_permission_CHANGE_NETWORK_STATE','com_android_launcher_permission_INSTALL_SHORTCUT','android_permission_android_permission_READ_PHONE_STATE','android_permission_CALL_PHONE','android_permission_WRITE_CONTACTS','android_permission_READ_PHONE_STATE','com_samsung_android_providers_context_permission_WRITE_USE_APP_FEATURE_SURVEY','android_permission_MODIFY_AUDIO_SETTINGS','android_permission_ACCESS_LOCATION_EXTRA_COMMANDS','android_permission_INTERNET','android_permission_MOUNT_UNMOUNT_FILESYSTEMS','com_majeur_launcher_permission_UPDATE_BADGE','android_permission_AUTHENTICATE_ACCOUNTS','com_htc_launcher_permission_READ_SETTINGS','android_permission_ACCESS_WIFI_STATE','android_permission_FLASHLIGHT','android_permission_READ_APP_BADGE','android_permission_USE_CREDENTIALS','android_permission_CHANGE_CONFIGURATION','android_permission_READ_SYNC_SETTINGS','android_permission_BROADCAST_STICKY','com_anddoes_launcher_permission_UPDATE_COUNT','com_android_alarm_permission_SET_ALARM','com_google_android_c2dm_permission_RECEIVE','android_permission_KILL_BACKGROUND_PROCESSES','com_sonymobile_home_permission_PROVIDER_INSERT_BADGE','com_sec_android_provider_badge_permission_READ','android_permission_WRITE_CALENDAR','android_permission_SEND_SMS','com_huawei_android_launcher_permission_WRITE_SETTINGS','android_permission_REQUEST_INSTALL_PACKAGES','android_permission_SET_WALLPAPER_HINTS','android_permission_SET_WALLPAPER','com_oppo_launcher_permission_WRITE_SETTINGS','android_permission_RESTART_PACKAGES','me_everything_badger_permission_BADGE_COUNT_WRITE','android_permission_ACCESS_MOCK_LOCATION','android_permission_ACCESS_COARSE_LOCATION','android_permission_READ_LOGS','com_google_android_gms_permission_ACTIVITY_RECOGNITION','com_amazon_device_messaging_permission_RECEIVE','android_permission_SYSTEM_ALERT_WINDOW','android_permission_DISABLE_KEYGUARD','android_permission_USE_FINGERPRINT','me_everything_badger_permission_BADGE_COUNT_READ','android_permission_CHANGE_WIFI_STATE','android_permission_READ_CONTACTS','com_android_vending_BILLING','android_permission_READ_CALENDAR','android_permission_RECEIVE_BOOT_COMPLETED','android_permission_WAKE_LOCK','android_permission_ACCESS_FINE_LOCATION','android_permission_BLUETOOTH','android_permission_CAMERA','com_android_vending_CHECK_LICENSE','android_permission_FOREGROUND_SERVICE','android_permission_BLUETOOTH_ADMIN','android_permission_VIBRATE','android_permission_NFC','android_permission_RECEIVE_USER_PRESENT','android_permission_CLEAR_APP_CACHE','com_android_launcher_permission_UNINSTALL_SHORTCUT','com_sec_android_iap_permission_BILLING','com_htc_launcher_permission_UPDATE_SHORTCUT','com_sec_android_provider_badge_permission_WRITE','android_permission_ACCESS_NETWORK_STATE','com_google_android_finsky_permission_BIND_GET_INSTALL_REFERRER_SERVICE','com_huawei_android_launcher_permission_READ_SETTINGS','android_permission_READ_SMS','android_permission_PROCESS_INCOMING_CALLS')], y=Android_attack_detect[, c('Result')], size = c(9), maxit = 100,
    learnFunc = "BackpropMomentum" )
}
local({
    #Summarizing the model
    BSkyRes<-summary(Beta)
    #Extracting and displaying model information
    BSkyInfo<-extractNetInfo(Beta)
    BSkyFormat(BSkyInfo)
    #Plotting the neural net
    NeuralNetTools::plotnet(Beta)
    #Setting attributes to support scoring
    attr(.GlobalEnv$Beta,"depvar")="'Result'"
    attr(.GlobalEnv$Beta,"indepvar")="'android_permission_GET_ACCOUNTS','com_sonyericsson_home_permission_BROADCAST_BADGE','android_permission_READ_PROFILE','android_permission_MANAGE_ACCOUNTS','android_permission_WRITE_SYNC_SETTINGS','android_permission_READ_EXTERNAL_STORAGE','android_permission_RECEIVE_SMS','com_android_launcher_permission_READ_SETTINGS','android_permission_WRITE_SETTINGS','com_google_android_providers_gsf_permission_READ_GSERVICES','android_permission_DOWNLOAD_WITHOUT_NOTIFICATION','android_permission_GET_TASKS','android_permission_WRITE_EXTERNAL_STORAGE','android_permission_RECORD_AUDIO','com_huawei_android_launcher_permission_CHANGE_BADGE','com_oppo_launcher_permission_READ_SETTINGS','android_permission_CHANGE_NETWORK_STATE','com_android_launcher_permission_INSTALL_SHORTCUT','android_permission_android_permission_READ_PHONE_STATE','android_permission_CALL_PHONE','android_permission_WRITE_CONTACTS','android_permission_READ_PHONE_STATE','com_samsung_android_providers_context_permission_WRITE_USE_APP_FEATURE_SURVEY','android_permission_MODIFY_AUDIO_SETTINGS','android_permission_ACCESS_LOCATION_EXTRA_COMMANDS','android_permission_INTERNET','android_permission_MOUNT_UNMOUNT_FILESYSTEMS','com_majeur_launcher_permission_UPDATE_BADGE','android_permission_AUTHENTICATE_ACCOUNTS','com_htc_launcher_permission_READ_SETTINGS','android_permission_ACCESS_WIFI_STATE','android_permission_FLASHLIGHT','android_permission_READ_APP_BADGE','android_permission_USE_CREDENTIALS','android_permission_CHANGE_CONFIGURATION','android_permission_READ_SYNC_SETTINGS','android_permission_BROADCAST_STICKY','com_anddoes_launcher_permission_UPDATE_COUNT','com_android_alarm_permission_SET_ALARM','com_google_android_c2dm_permission_RECEIVE','android_permission_KILL_BACKGROUND_PROCESSES','com_sonymobile_home_permission_PROVIDER_INSERT_BADGE','com_sec_android_provider_badge_permission_READ','android_permission_WRITE_CALENDAR','android_permission_SEND_SMS','com_huawei_android_launcher_permission_WRITE_SETTINGS','android_permission_REQUEST_INSTALL_PACKAGES','android_permission_SET_WALLPAPER_HINTS','android_permission_SET_WALLPAPER','com_oppo_launcher_permission_WRITE_SETTINGS','android_permission_RESTART_PACKAGES','me_everything_badger_permission_BADGE_COUNT_WRITE','android_permission_ACCESS_MOCK_LOCATION','android_permission_ACCESS_COARSE_LOCATION','android_permission_READ_LOGS','com_google_android_gms_permission_ACTIVITY_RECOGNITION','com_amazon_device_messaging_permission_RECEIVE','android_permission_SYSTEM_ALERT_WINDOW','android_permission_DISABLE_KEYGUARD','android_permission_USE_FINGERPRINT','me_everything_badger_permission_BADGE_COUNT_READ','android_permission_CHANGE_WIFI_STATE','android_permission_READ_CONTACTS','com_android_vending_BILLING','android_permission_READ_CALENDAR','android_permission_RECEIVE_BOOT_COMPLETED','android_permission_WAKE_LOCK','android_permission_ACCESS_FINE_LOCATION','android_permission_BLUETOOTH','android_permission_CAMERA','com_android_vending_CHECK_LICENSE','android_permission_FOREGROUND_SERVICE','android_permission_BLUETOOTH_ADMIN','android_permission_VIBRATE','android_permission_NFC','android_permission_RECEIVE_USER_PRESENT','android_permission_CLEAR_APP_CACHE','com_android_launcher_permission_UNINSTALL_SHORTCUT','com_sec_android_iap_permission_BILLING','com_htc_launcher_permission_UPDATE_SHORTCUT','com_sec_android_provider_badge_permission_WRITE','android_permission_ACCESS_NETWORK_STATE','com_google_android_finsky_permission_BIND_GET_INSTALL_REFERRER_SERVICE','com_huawei_android_launcher_permission_READ_SETTINGS','android_permission_READ_SMS','android_permission_PROCESS_INCOMING_CALLS'"
    attr(.GlobalEnv$Beta,"classDepVar")= class(Android_attack_detect[, c('Result')])
    attr(.GlobalEnv$Beta,"depVarSample")= sample(Android_attack_detect[, c('Result')], size = 2, replace = TRUE)
})

```
# Mixed Models

```{r}
cat ("The covariance structure you selected: Intercept Only is invalid as you are attempting to analyze the random variance of: com_sonyericsson_home_permission_BROADCAST_BADGE,android_permission_READ_PROFILE,android_permission_MANAGE_ACCOUNTS,android_permission_WRITE_SYNC_SETTINGS,android_permission_READ_EXTERNAL_STORAGE,android_permission_RECEIVE_SMS,com_android_launcher_permission_READ_SETTINGS,android_permission_WRITE_SETTINGS,com_google_android_providers_gsf_permission_READ_GSERVICES,android_permission_DOWNLOAD_WITHOUT_NOTIFICATION,android_permission_GET_TASKS,android_permission_WRITE_EXTERNAL_STORAGE,android_permission_RECORD_AUDIO,com_huawei_android_launcher_permission_CHANGE_BADGE,com_oppo_launcher_permission_READ_SETTINGS,android_permission_CHANGE_NETWORK_STATE,com_android_launcher_permission_INSTALL_SHORTCUT,android_permission_android_permission_READ_PHONE_STATE,android_permission_CALL_PHONE,android_permission_WRITE_CONTACTS,android_permission_READ_PHONE_STATE,com_samsung_android_providers_context_permission_WRITE_USE_APP_FEATURE_SURVEY,android_permission_MODIFY_AUDIO_SETTINGS,android_permission_ACCESS_LOCATION_EXTRA_COMMANDS,android_permission_INTERNET,android_permission_MOUNT_UNMOUNT_FILESYSTEMS,com_majeur_launcher_permission_UPDATE_BADGE,android_permission_AUTHENTICATE_ACCOUNTS,com_htc_launcher_permission_READ_SETTINGS,android_permission_ACCESS_WIFI_STATE,android_permission_FLASHLIGHT,android_permission_READ_APP_BADGE,android_permission_USE_CREDENTIALS,android_permission_CHANGE_CONFIGURATION,android_permission_READ_SYNC_SETTINGS,android_permission_BROADCAST_STICKY,com_anddoes_launcher_permission_UPDATE_COUNT,com_android_alarm_permission_SET_ALARM,com_google_android_c2dm_permission_RECEIVE,android_permission_KILL_BACKGROUND_PROCESSES,com_sonymobile_home_permission_PROVIDER_INSERT_BADGE,com_sec_android_provider_badge_permission_READ,android_permission_WRITE_CALENDAR,android_permission_SEND_SMS,com_huawei_android_launcher_permission_WRITE_SETTINGS,android_permission_REQUEST_INSTALL_PACKAGES,android_permission_SET_WALLPAPER_HINTS,android_permission_SET_WALLPAPER,com_oppo_launcher_permission_WRITE_SETTINGS,android_permission_RESTART_PACKAGES,me_everything_badger_permission_BADGE_COUNT_WRITE,android_permission_ACCESS_MOCK_LOCATION,android_permission_ACCESS_COARSE_LOCATION,android_permission_READ_LOGS,com_google_android_gms_permission_ACTIVITY_RECOGNITION,com_amazon_device_messaging_permission_RECEIVE,android_permission_SYSTEM_ALERT_WINDOW,android_permission_DISABLE_KEYGUARD,android_permission_USE_FINGERPRINT,me_everything_badger_permission_BADGE_COUNT_READ,android_permission_CHANGE_WIFI_STATE,android_permission_READ_CONTACTS,com_android_vending_BILLING,android_permission_READ_CALENDAR,android_permission_RECEIVE_BOOT_COMPLETED,android_permission_WAKE_LOCK,android_permission_ACCESS_FINE_LOCATION,android_permission_BLUETOOTH,android_permission_CAMERA,com_android_vending_CHECK_LICENSE,android_permission_FOREGROUND_SERVICE,android_permission_BLUETOOTH_ADMIN,android_permission_VIBRATE,android_permission_NFC,android_permission_RECEIVE_USER_PRESENT,android_permission_CLEAR_APP_CACHE,com_android_launcher_permission_UNINSTALL_SHORTCUT,com_sec_android_iap_permission_BILLING,com_htc_launcher_permission_UPDATE_SHORTCUT,com_sec_android_provider_badge_permission_WRITE,android_permission_ACCESS_NETWORK_STATE,com_google_android_finsky_permission_BIND_GET_INSTALL_REFERRER_SERVICE,com_huawei_android_launcher_permission_READ_SETTINGS,android_permission_READ_SMS,android_permission_PROCESS_INCOMING_CALLS within nesting unit: android_permission_GET_ACCOUNTS. Please select a different covariance structure or remove the com_sonyericsson_home_permission_BROADCAST_BADGE,android_permission_READ_PROFILE,android_permission_MANAGE_ACCOUNTS,android_permission_WRITE_SYNC_SETTINGS,android_permission_READ_EXTERNAL_STORAGE,android_permission_RECEIVE_SMS,com_android_launcher_permission_READ_SETTINGS,android_permission_WRITE_SETTINGS,com_google_android_providers_gsf_permission_READ_GSERVICES,android_permission_DOWNLOAD_WITHOUT_NOTIFICATION,android_permission_GET_TASKS,android_permission_WRITE_EXTERNAL_STORAGE,android_permission_RECORD_AUDIO,com_huawei_android_launcher_permission_CHANGE_BADGE,com_oppo_launcher_permission_READ_SETTINGS,android_permission_CHANGE_NETWORK_STATE,com_android_launcher_permission_INSTALL_SHORTCUT,android_permission_android_permission_READ_PHONE_STATE,android_permission_CALL_PHONE,android_permission_WRITE_CONTACTS,android_permission_READ_PHONE_STATE,com_samsung_android_providers_context_permission_WRITE_USE_APP_FEATURE_SURVEY,android_permission_MODIFY_AUDIO_SETTINGS,android_permission_ACCESS_LOCATION_EXTRA_COMMANDS,android_permission_INTERNET,android_permission_MOUNT_UNMOUNT_FILESYSTEMS,com_majeur_launcher_permission_UPDATE_BADGE,android_permission_AUTHENTICATE_ACCOUNTS,com_htc_launcher_permission_READ_SETTINGS,android_permission_ACCESS_WIFI_STATE,android_permission_FLASHLIGHT,android_permission_READ_APP_BADGE,android_permission_USE_CREDENTIALS,android_permission_CHANGE_CONFIGURATION,android_permission_READ_SYNC_SETTINGS,android_permission_BROADCAST_STICKY,com_anddoes_launcher_permission_UPDATE_COUNT,com_android_alarm_permission_SET_ALARM,com_google_android_c2dm_permission_RECEIVE,android_permission_KILL_BACKGROUND_PROCESSES,com_sonymobile_home_permission_PROVIDER_INSERT_BADGE,com_sec_android_provider_badge_permission_READ,android_permission_WRITE_CALENDAR,android_permission_SEND_SMS,com_huawei_android_launcher_permission_WRITE_SETTINGS,android_permission_REQUEST_INSTALL_PACKAGES,android_permission_SET_WALLPAPER_HINTS,android_permission_SET_WALLPAPER,com_oppo_launcher_permission_WRITE_SETTINGS,android_permission_RESTART_PACKAGES,me_everything_badger_permission_BADGE_COUNT_WRITE,android_permission_ACCESS_MOCK_LOCATION,android_permission_ACCESS_COARSE_LOCATION,android_permission_READ_LOGS,com_google_android_gms_permission_ACTIVITY_RECOGNITION,com_amazon_device_messaging_permission_RECEIVE,android_permission_SYSTEM_ALERT_WINDOW,android_permission_DISABLE_KEYGUARD,android_permission_USE_FINGERPRINT,me_everything_badger_permission_BADGE_COUNT_READ,android_permission_CHANGE_WIFI_STATE,android_permission_READ_CONTACTS,com_android_vending_BILLING,android_permission_READ_CALENDAR,android_permission_RECEIVE_BOOT_COMPLETED,android_permission_WAKE_LOCK,android_permission_ACCESS_FINE_LOCATION,android_permission_BLUETOOTH,android_permission_CAMERA,com_android_vending_CHECK_LICENSE,android_permission_FOREGROUND_SERVICE,android_permission_BLUETOOTH_ADMIN,android_permission_VIBRATE,android_permission_NFC,android_permission_RECEIVE_USER_PRESENT,android_permission_CLEAR_APP_CACHE,com_android_launcher_permission_UNINSTALL_SHORTCUT,com_sec_android_iap_permission_BILLING,com_htc_launcher_permission_UPDATE_SHORTCUT,com_sec_android_provider_badge_permission_WRITE,android_permission_ACCESS_NETWORK_STATE,com_google_android_finsky_permission_BIND_GET_INSTALL_REFERRER_SERVICE,com_huawei_android_launcher_permission_READ_SETTINGS,android_permission_READ_SMS,android_permission_PROCESS_INCOMING_CALLS variable(s) from the random effects box.")
```
# Density Plot

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_GET_ACCOUNTS  )) +
	geom_density(position = "dodge",alpha=1 ) +
	labs(x="android_permission_GET_ACCOUNTS",title= "Density plot for variable android_permission_GET_ACCOUNTS ") +
	xlab("android_permission_GET_ACCOUNTS")  + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=com_sonyericsson_home_permission_BROADCAST_BADGE  )) +
	geom_density(position = "dodge",alpha=1 ) +
	labs(x="com_sonyericsson_home_permission_BROADCAST_BADGE",title= "Density plot for variable com_sonyericsson_home_permission_BROADCAST_BADGE ") +
	xlab("com_sonyericsson_home_permission_BROADCAST_BADGE")  + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_READ_PROFILE  )) +
	geom_density(position = "dodge",alpha=1 ) +
	labs(x="android_permission_READ_PROFILE",title= "Density plot for variable android_permission_READ_PROFILE ") +
	xlab("android_permission_READ_PROFILE")  + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_MANAGE_ACCOUNTS  )) +
	geom_density(position = "dodge",alpha=1 ) +
	labs(x="android_permission_MANAGE_ACCOUNTS",title= "Density plot for variable android_permission_MANAGE_ACCOUNTS ") +
	xlab("android_permission_MANAGE_ACCOUNTS")  + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_WRITE_SYNC_SETTINGS  )) +
	geom_density(position = "dodge",alpha=1 ) +
	labs(x="android_permission_WRITE_SYNC_SETTINGS",title= "Density plot for variable android_permission_WRITE_SYNC_SETTINGS ") +
	xlab("android_permission_WRITE_SYNC_SETTINGS")  + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_READ_EXTERNAL_STORAGE  )) +
	geom_density(position = "dodge",alpha=1 ) +
	labs(x="android_permission_READ_EXTERNAL_STORAGE",title= "Density plot for variable android_permission_READ_EXTERNAL_STORAGE ") +
	xlab("android_permission_READ_EXTERNAL_STORAGE")  + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_RECEIVE_SMS  )) +
	geom_density(position = "dodge",alpha=1 ) +
	labs(x="android_permission_RECEIVE_SMS",title= "Density plot for variable android_permission_RECEIVE_SMS ") +
	xlab("android_permission_RECEIVE_SMS")  + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=com_android_launcher_permission_READ_SETTINGS  )) +
	geom_density(position = "dodge",alpha=1 ) +
	labs(x="com_android_launcher_permission_READ_SETTINGS",title= "Density plot for variable com_android_launcher_permission_READ_SETTINGS ") +
	xlab("com_android_launcher_permission_READ_SETTINGS")  + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_WRITE_SETTINGS  )) +
	geom_density(position = "dodge",alpha=1 ) +
	labs(x="android_permission_WRITE_SETTINGS",title= "Density plot for variable android_permission_WRITE_SETTINGS ") +
	xlab("android_permission_WRITE_SETTINGS")  + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=com_google_android_providers_gsf_permission_READ_GSERVICES  )) +
	geom_density(position = "dodge",alpha=1 ) +
	labs(x="com_google_android_providers_gsf_permission_READ_GSERVICES",title= "Density plot for variable com_google_android_providers_gsf_permission_READ_GSERVICES ") +
	xlab("com_google_android_providers_gsf_permission_READ_GSERVICES")  + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_DOWNLOAD_WITHOUT_NOTIFICATION  )) +
	geom_density(position = "dodge",alpha=1 ) +
	labs(x="android_permission_DOWNLOAD_WITHOUT_NOTIFICATION",title= "Density plot for variable android_permission_DOWNLOAD_WITHOUT_NOTIFICATION ") +
	xlab("android_permission_DOWNLOAD_WITHOUT_NOTIFICATION")  + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_GET_TASKS  )) +
	geom_density(position = "dodge",alpha=1 ) +
	labs(x="android_permission_GET_TASKS",title= "Density plot for variable android_permission_GET_TASKS ") +
	xlab("android_permission_GET_TASKS")  + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_WRITE_EXTERNAL_STORAGE  )) +
	geom_density(position = "dodge",alpha=1 ) +
	labs(x="android_permission_WRITE_EXTERNAL_STORAGE",title= "Density plot for variable android_permission_WRITE_EXTERNAL_STORAGE ") +
	xlab("android_permission_WRITE_EXTERNAL_STORAGE")  + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_RECORD_AUDIO  )) +
	geom_density(position = "dodge",alpha=1 ) +
	labs(x="android_permission_RECORD_AUDIO",title= "Density plot for variable android_permission_RECORD_AUDIO ") +
	xlab("android_permission_RECORD_AUDIO")  + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=com_huawei_android_launcher_permission_CHANGE_BADGE  )) +
	geom_density(position = "dodge",alpha=1 ) +
	labs(x="com_huawei_android_launcher_permission_CHANGE_BADGE",title= "Density plot for variable com_huawei_android_launcher_permission_CHANGE_BADGE ") +
	xlab("com_huawei_android_launcher_permission_CHANGE_BADGE")  + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=com_oppo_launcher_permission_READ_SETTINGS  )) +
	geom_density(position = "dodge",alpha=1 ) +
	labs(x="com_oppo_launcher_permission_READ_SETTINGS",title= "Density plot for variable com_oppo_launcher_permission_READ_SETTINGS ") +
	xlab("com_oppo_launcher_permission_READ_SETTINGS")  + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_CHANGE_NETWORK_STATE  )) +
	geom_density(position = "dodge",alpha=1 ) +
	labs(x="android_permission_CHANGE_NETWORK_STATE",title= "Density plot for variable android_permission_CHANGE_NETWORK_STATE ") +
	xlab("android_permission_CHANGE_NETWORK_STATE")  + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=com_android_launcher_permission_INSTALL_SHORTCUT  )) +
	geom_density(position = "dodge",alpha=1 ) +
	labs(x="com_android_launcher_permission_INSTALL_SHORTCUT",title= "Density plot for variable com_android_launcher_permission_INSTALL_SHORTCUT ") +
	xlab("com_android_launcher_permission_INSTALL_SHORTCUT")  + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_android_permission_READ_PHONE_STATE  )) +
	geom_density(position = "dodge",alpha=1 ) +
	labs(x="android_permission_android_permission_READ_PHONE_STATE",title= "Density plot for variable android_permission_android_permission_READ_PHONE_STATE ") +
	xlab("android_permission_android_permission_READ_PHONE_STATE")  + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_CALL_PHONE  )) +
	geom_density(position = "dodge",alpha=1 ) +
	labs(x="android_permission_CALL_PHONE",title= "Density plot for variable android_permission_CALL_PHONE ") +
	xlab("android_permission_CALL_PHONE")  + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_WRITE_CONTACTS  )) +
	geom_density(position = "dodge",alpha=1 ) +
	labs(x="android_permission_WRITE_CONTACTS",title= "Density plot for variable android_permission_WRITE_CONTACTS ") +
	xlab("android_permission_WRITE_CONTACTS")  + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_READ_PHONE_STATE  )) +
	geom_density(position = "dodge",alpha=1 ) +
	labs(x="android_permission_READ_PHONE_STATE",title= "Density plot for variable android_permission_READ_PHONE_STATE ") +
	xlab("android_permission_READ_PHONE_STATE")  + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=com_samsung_android_providers_context_permission_WRITE_USE_APP_FEATURE_SURVEY  )) +
	geom_density(position = "dodge",alpha=1 ) +
	labs(x="com_samsung_android_providers_context_permission_WRITE_USE_APP_FEATURE_SURVEY",title= "Density plot for variable com_samsung_android_providers_context_permission_WRITE_USE_APP_FEATURE_SURVEY ") +
	xlab("com_samsung_android_providers_context_permission_WRITE_USE_APP_FEATURE_SURVEY")  + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_MODIFY_AUDIO_SETTINGS  )) +
	geom_density(position = "dodge",alpha=1 ) +
	labs(x="android_permission_MODIFY_AUDIO_SETTINGS",title= "Density plot for variable android_permission_MODIFY_AUDIO_SETTINGS ") +
	xlab("android_permission_MODIFY_AUDIO_SETTINGS")  + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_ACCESS_LOCATION_EXTRA_COMMANDS  )) +
	geom_density(position = "dodge",alpha=1 ) +
	labs(x="android_permission_ACCESS_LOCATION_EXTRA_COMMANDS",title= "Density plot for variable android_permission_ACCESS_LOCATION_EXTRA_COMMANDS ") +
	xlab("android_permission_ACCESS_LOCATION_EXTRA_COMMANDS")  + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_INTERNET  )) +
	geom_density(position = "dodge",alpha=1 ) +
	labs(x="android_permission_INTERNET",title= "Density plot for variable android_permission_INTERNET ") +
	xlab("android_permission_INTERNET")  + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_MOUNT_UNMOUNT_FILESYSTEMS  )) +
	geom_density(position = "dodge",alpha=1 ) +
	labs(x="android_permission_MOUNT_UNMOUNT_FILESYSTEMS",title= "Density plot for variable android_permission_MOUNT_UNMOUNT_FILESYSTEMS ") +
	xlab("android_permission_MOUNT_UNMOUNT_FILESYSTEMS")  + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=com_majeur_launcher_permission_UPDATE_BADGE  )) +
	geom_density(position = "dodge",alpha=1 ) +
	labs(x="com_majeur_launcher_permission_UPDATE_BADGE",title= "Density plot for variable com_majeur_launcher_permission_UPDATE_BADGE ") +
	xlab("com_majeur_launcher_permission_UPDATE_BADGE")  + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_AUTHENTICATE_ACCOUNTS  )) +
	geom_density(position = "dodge",alpha=1 ) +
	labs(x="android_permission_AUTHENTICATE_ACCOUNTS",title= "Density plot for variable android_permission_AUTHENTICATE_ACCOUNTS ") +
	xlab("android_permission_AUTHENTICATE_ACCOUNTS")  + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=com_htc_launcher_permission_READ_SETTINGS  )) +
	geom_density(position = "dodge",alpha=1 ) +
	labs(x="com_htc_launcher_permission_READ_SETTINGS",title= "Density plot for variable com_htc_launcher_permission_READ_SETTINGS ") +
	xlab("com_htc_launcher_permission_READ_SETTINGS")  + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_ACCESS_WIFI_STATE  )) +
	geom_density(position = "dodge",alpha=1 ) +
	labs(x="android_permission_ACCESS_WIFI_STATE",title= "Density plot for variable android_permission_ACCESS_WIFI_STATE ") +
	xlab("android_permission_ACCESS_WIFI_STATE")  + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_FLASHLIGHT  )) +
	geom_density(position = "dodge",alpha=1 ) +
	labs(x="android_permission_FLASHLIGHT",title= "Density plot for variable android_permission_FLASHLIGHT ") +
	xlab("android_permission_FLASHLIGHT")  + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_READ_APP_BADGE  )) +
	geom_density(position = "dodge",alpha=1 ) +
	labs(x="android_permission_READ_APP_BADGE",title= "Density plot for variable android_permission_READ_APP_BADGE ") +
	xlab("android_permission_READ_APP_BADGE")  + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_USE_CREDENTIALS  )) +
	geom_density(position = "dodge",alpha=1 ) +
	labs(x="android_permission_USE_CREDENTIALS",title= "Density plot for variable android_permission_USE_CREDENTIALS ") +
	xlab("android_permission_USE_CREDENTIALS")  + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_CHANGE_CONFIGURATION  )) +
	geom_density(position = "dodge",alpha=1 ) +
	labs(x="android_permission_CHANGE_CONFIGURATION",title= "Density plot for variable android_permission_CHANGE_CONFIGURATION ") +
	xlab("android_permission_CHANGE_CONFIGURATION")  + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_READ_SYNC_SETTINGS  )) +
	geom_density(position = "dodge",alpha=1 ) +
	labs(x="android_permission_READ_SYNC_SETTINGS",title= "Density plot for variable android_permission_READ_SYNC_SETTINGS ") +
	xlab("android_permission_READ_SYNC_SETTINGS")  + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_BROADCAST_STICKY  )) +
	geom_density(position = "dodge",alpha=1 ) +
	labs(x="android_permission_BROADCAST_STICKY",title= "Density plot for variable android_permission_BROADCAST_STICKY ") +
	xlab("android_permission_BROADCAST_STICKY")  + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=com_anddoes_launcher_permission_UPDATE_COUNT  )) +
	geom_density(position = "dodge",alpha=1 ) +
	labs(x="com_anddoes_launcher_permission_UPDATE_COUNT",title= "Density plot for variable com_anddoes_launcher_permission_UPDATE_COUNT ") +
	xlab("com_anddoes_launcher_permission_UPDATE_COUNT")  + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=com_android_alarm_permission_SET_ALARM  )) +
	geom_density(position = "dodge",alpha=1 ) +
	labs(x="com_android_alarm_permission_SET_ALARM",title= "Density plot for variable com_android_alarm_permission_SET_ALARM ") +
	xlab("com_android_alarm_permission_SET_ALARM")  + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=com_google_android_c2dm_permission_RECEIVE  )) +
	geom_density(position = "dodge",alpha=1 ) +
	labs(x="com_google_android_c2dm_permission_RECEIVE",title= "Density plot for variable com_google_android_c2dm_permission_RECEIVE ") +
	xlab("com_google_android_c2dm_permission_RECEIVE")  + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_KILL_BACKGROUND_PROCESSES  )) +
	geom_density(position = "dodge",alpha=1 ) +
	labs(x="android_permission_KILL_BACKGROUND_PROCESSES",title= "Density plot for variable android_permission_KILL_BACKGROUND_PROCESSES ") +
	xlab("android_permission_KILL_BACKGROUND_PROCESSES")  + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=com_sonymobile_home_permission_PROVIDER_INSERT_BADGE  )) +
	geom_density(position = "dodge",alpha=1 ) +
	labs(x="com_sonymobile_home_permission_PROVIDER_INSERT_BADGE",title= "Density plot for variable com_sonymobile_home_permission_PROVIDER_INSERT_BADGE ") +
	xlab("com_sonymobile_home_permission_PROVIDER_INSERT_BADGE")  + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=com_sec_android_provider_badge_permission_READ  )) +
	geom_density(position = "dodge",alpha=1 ) +
	labs(x="com_sec_android_provider_badge_permission_READ",title= "Density plot for variable com_sec_android_provider_badge_permission_READ ") +
	xlab("com_sec_android_provider_badge_permission_READ")  + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_WRITE_CALENDAR  )) +
	geom_density(position = "dodge",alpha=1 ) +
	labs(x="android_permission_WRITE_CALENDAR",title= "Density plot for variable android_permission_WRITE_CALENDAR ") +
	xlab("android_permission_WRITE_CALENDAR")  + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_SEND_SMS  )) +
	geom_density(position = "dodge",alpha=1 ) +
	labs(x="android_permission_SEND_SMS",title= "Density plot for variable android_permission_SEND_SMS ") +
	xlab("android_permission_SEND_SMS")  + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=com_huawei_android_launcher_permission_WRITE_SETTINGS  )) +
	geom_density(position = "dodge",alpha=1 ) +
	labs(x="com_huawei_android_launcher_permission_WRITE_SETTINGS",title= "Density plot for variable com_huawei_android_launcher_permission_WRITE_SETTINGS ") +
	xlab("com_huawei_android_launcher_permission_WRITE_SETTINGS")  + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_REQUEST_INSTALL_PACKAGES  )) +
	geom_density(position = "dodge",alpha=1 ) +
	labs(x="android_permission_REQUEST_INSTALL_PACKAGES",title= "Density plot for variable android_permission_REQUEST_INSTALL_PACKAGES ") +
	xlab("android_permission_REQUEST_INSTALL_PACKAGES")  + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_SET_WALLPAPER_HINTS  )) +
	geom_density(position = "dodge",alpha=1 ) +
	labs(x="android_permission_SET_WALLPAPER_HINTS",title= "Density plot for variable android_permission_SET_WALLPAPER_HINTS ") +
	xlab("android_permission_SET_WALLPAPER_HINTS")  + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_SET_WALLPAPER  )) +
	geom_density(position = "dodge",alpha=1 ) +
	labs(x="android_permission_SET_WALLPAPER",title= "Density plot for variable android_permission_SET_WALLPAPER ") +
	xlab("android_permission_SET_WALLPAPER")  + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=com_oppo_launcher_permission_WRITE_SETTINGS  )) +
	geom_density(position = "dodge",alpha=1 ) +
	labs(x="com_oppo_launcher_permission_WRITE_SETTINGS",title= "Density plot for variable com_oppo_launcher_permission_WRITE_SETTINGS ") +
	xlab("com_oppo_launcher_permission_WRITE_SETTINGS")  + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_RESTART_PACKAGES  )) +
	geom_density(position = "dodge",alpha=1 ) +
	labs(x="android_permission_RESTART_PACKAGES",title= "Density plot for variable android_permission_RESTART_PACKAGES ") +
	xlab("android_permission_RESTART_PACKAGES")  + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=me_everything_badger_permission_BADGE_COUNT_WRITE  )) +
	geom_density(position = "dodge",alpha=1 ) +
	labs(x="me_everything_badger_permission_BADGE_COUNT_WRITE",title= "Density plot for variable me_everything_badger_permission_BADGE_COUNT_WRITE ") +
	xlab("me_everything_badger_permission_BADGE_COUNT_WRITE")  + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_ACCESS_MOCK_LOCATION  )) +
	geom_density(position = "dodge",alpha=1 ) +
	labs(x="android_permission_ACCESS_MOCK_LOCATION",title= "Density plot for variable android_permission_ACCESS_MOCK_LOCATION ") +
	xlab("android_permission_ACCESS_MOCK_LOCATION")  + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_ACCESS_COARSE_LOCATION  )) +
	geom_density(position = "dodge",alpha=1 ) +
	labs(x="android_permission_ACCESS_COARSE_LOCATION",title= "Density plot for variable android_permission_ACCESS_COARSE_LOCATION ") +
	xlab("android_permission_ACCESS_COARSE_LOCATION")  + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_READ_LOGS  )) +
	geom_density(position = "dodge",alpha=1 ) +
	labs(x="android_permission_READ_LOGS",title= "Density plot for variable android_permission_READ_LOGS ") +
	xlab("android_permission_READ_LOGS")  + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=com_google_android_gms_permission_ACTIVITY_RECOGNITION  )) +
	geom_density(position = "dodge",alpha=1 ) +
	labs(x="com_google_android_gms_permission_ACTIVITY_RECOGNITION",title= "Density plot for variable com_google_android_gms_permission_ACTIVITY_RECOGNITION ") +
	xlab("com_google_android_gms_permission_ACTIVITY_RECOGNITION")  + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=com_amazon_device_messaging_permission_RECEIVE  )) +
	geom_density(position = "dodge",alpha=1 ) +
	labs(x="com_amazon_device_messaging_permission_RECEIVE",title= "Density plot for variable com_amazon_device_messaging_permission_RECEIVE ") +
	xlab("com_amazon_device_messaging_permission_RECEIVE")  + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_SYSTEM_ALERT_WINDOW  )) +
	geom_density(position = "dodge",alpha=1 ) +
	labs(x="android_permission_SYSTEM_ALERT_WINDOW",title= "Density plot for variable android_permission_SYSTEM_ALERT_WINDOW ") +
	xlab("android_permission_SYSTEM_ALERT_WINDOW")  + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_DISABLE_KEYGUARD  )) +
	geom_density(position = "dodge",alpha=1 ) +
	labs(x="android_permission_DISABLE_KEYGUARD",title= "Density plot for variable android_permission_DISABLE_KEYGUARD ") +
	xlab("android_permission_DISABLE_KEYGUARD")  + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_USE_FINGERPRINT  )) +
	geom_density(position = "dodge",alpha=1 ) +
	labs(x="android_permission_USE_FINGERPRINT",title= "Density plot for variable android_permission_USE_FINGERPRINT ") +
	xlab("android_permission_USE_FINGERPRINT")  + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=me_everything_badger_permission_BADGE_COUNT_READ  )) +
	geom_density(position = "dodge",alpha=1 ) +
	labs(x="me_everything_badger_permission_BADGE_COUNT_READ",title= "Density plot for variable me_everything_badger_permission_BADGE_COUNT_READ ") +
	xlab("me_everything_badger_permission_BADGE_COUNT_READ")  + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_CHANGE_WIFI_STATE  )) +
	geom_density(position = "dodge",alpha=1 ) +
	labs(x="android_permission_CHANGE_WIFI_STATE",title= "Density plot for variable android_permission_CHANGE_WIFI_STATE ") +
	xlab("android_permission_CHANGE_WIFI_STATE")  + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_READ_CONTACTS  )) +
	geom_density(position = "dodge",alpha=1 ) +
	labs(x="android_permission_READ_CONTACTS",title= "Density plot for variable android_permission_READ_CONTACTS ") +
	xlab("android_permission_READ_CONTACTS")  + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=com_android_vending_BILLING  )) +
	geom_density(position = "dodge",alpha=1 ) +
	labs(x="com_android_vending_BILLING",title= "Density plot for variable com_android_vending_BILLING ") +
	xlab("com_android_vending_BILLING")  + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_READ_CALENDAR  )) +
	geom_density(position = "dodge",alpha=1 ) +
	labs(x="android_permission_READ_CALENDAR",title= "Density plot for variable android_permission_READ_CALENDAR ") +
	xlab("android_permission_READ_CALENDAR")  + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_RECEIVE_BOOT_COMPLETED  )) +
	geom_density(position = "dodge",alpha=1 ) +
	labs(x="android_permission_RECEIVE_BOOT_COMPLETED",title= "Density plot for variable android_permission_RECEIVE_BOOT_COMPLETED ") +
	xlab("android_permission_RECEIVE_BOOT_COMPLETED")  + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_WAKE_LOCK  )) +
	geom_density(position = "dodge",alpha=1 ) +
	labs(x="android_permission_WAKE_LOCK",title= "Density plot for variable android_permission_WAKE_LOCK ") +
	xlab("android_permission_WAKE_LOCK")  + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_ACCESS_FINE_LOCATION  )) +
	geom_density(position = "dodge",alpha=1 ) +
	labs(x="android_permission_ACCESS_FINE_LOCATION",title= "Density plot for variable android_permission_ACCESS_FINE_LOCATION ") +
	xlab("android_permission_ACCESS_FINE_LOCATION")  + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_BLUETOOTH  )) +
	geom_density(position = "dodge",alpha=1 ) +
	labs(x="android_permission_BLUETOOTH",title= "Density plot for variable android_permission_BLUETOOTH ") +
	xlab("android_permission_BLUETOOTH")  + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_CAMERA  )) +
	geom_density(position = "dodge",alpha=1 ) +
	labs(x="android_permission_CAMERA",title= "Density plot for variable android_permission_CAMERA ") +
	xlab("android_permission_CAMERA")  + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=com_android_vending_CHECK_LICENSE  )) +
	geom_density(position = "dodge",alpha=1 ) +
	labs(x="com_android_vending_CHECK_LICENSE",title= "Density plot for variable com_android_vending_CHECK_LICENSE ") +
	xlab("com_android_vending_CHECK_LICENSE")  + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_FOREGROUND_SERVICE  )) +
	geom_density(position = "dodge",alpha=1 ) +
	labs(x="android_permission_FOREGROUND_SERVICE",title= "Density plot for variable android_permission_FOREGROUND_SERVICE ") +
	xlab("android_permission_FOREGROUND_SERVICE")  + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_BLUETOOTH_ADMIN  )) +
	geom_density(position = "dodge",alpha=1 ) +
	labs(x="android_permission_BLUETOOTH_ADMIN",title= "Density plot for variable android_permission_BLUETOOTH_ADMIN ") +
	xlab("android_permission_BLUETOOTH_ADMIN")  + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_VIBRATE  )) +
	geom_density(position = "dodge",alpha=1 ) +
	labs(x="android_permission_VIBRATE",title= "Density plot for variable android_permission_VIBRATE ") +
	xlab("android_permission_VIBRATE")  + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_NFC  )) +
	geom_density(position = "dodge",alpha=1 ) +
	labs(x="android_permission_NFC",title= "Density plot for variable android_permission_NFC ") +
	xlab("android_permission_NFC")  + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_RECEIVE_USER_PRESENT  )) +
	geom_density(position = "dodge",alpha=1 ) +
	labs(x="android_permission_RECEIVE_USER_PRESENT",title= "Density plot for variable android_permission_RECEIVE_USER_PRESENT ") +
	xlab("android_permission_RECEIVE_USER_PRESENT")  + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_CLEAR_APP_CACHE  )) +
	geom_density(position = "dodge",alpha=1 ) +
	labs(x="android_permission_CLEAR_APP_CACHE",title= "Density plot for variable android_permission_CLEAR_APP_CACHE ") +
	xlab("android_permission_CLEAR_APP_CACHE")  + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=com_android_launcher_permission_UNINSTALL_SHORTCUT  )) +
	geom_density(position = "dodge",alpha=1 ) +
	labs(x="com_android_launcher_permission_UNINSTALL_SHORTCUT",title= "Density plot for variable com_android_launcher_permission_UNINSTALL_SHORTCUT ") +
	xlab("com_android_launcher_permission_UNINSTALL_SHORTCUT")  + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=com_sec_android_iap_permission_BILLING  )) +
	geom_density(position = "dodge",alpha=1 ) +
	labs(x="com_sec_android_iap_permission_BILLING",title= "Density plot for variable com_sec_android_iap_permission_BILLING ") +
	xlab("com_sec_android_iap_permission_BILLING")  + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=com_htc_launcher_permission_UPDATE_SHORTCUT  )) +
	geom_density(position = "dodge",alpha=1 ) +
	labs(x="com_htc_launcher_permission_UPDATE_SHORTCUT",title= "Density plot for variable com_htc_launcher_permission_UPDATE_SHORTCUT ") +
	xlab("com_htc_launcher_permission_UPDATE_SHORTCUT")  + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=com_sec_android_provider_badge_permission_WRITE  )) +
	geom_density(position = "dodge",alpha=1 ) +
	labs(x="com_sec_android_provider_badge_permission_WRITE",title= "Density plot for variable com_sec_android_provider_badge_permission_WRITE ") +
	xlab("com_sec_android_provider_badge_permission_WRITE")  + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_ACCESS_NETWORK_STATE  )) +
	geom_density(position = "dodge",alpha=1 ) +
	labs(x="android_permission_ACCESS_NETWORK_STATE",title= "Density plot for variable android_permission_ACCESS_NETWORK_STATE ") +
	xlab("android_permission_ACCESS_NETWORK_STATE")  + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=com_google_android_finsky_permission_BIND_GET_INSTALL_REFERRER_SERVICE  )) +
	geom_density(position = "dodge",alpha=1 ) +
	labs(x="com_google_android_finsky_permission_BIND_GET_INSTALL_REFERRER_SERVICE",title= "Density plot for variable com_google_android_finsky_permission_BIND_GET_INSTALL_REFERRER_SERVICE ") +
	xlab("com_google_android_finsky_permission_BIND_GET_INSTALL_REFERRER_SERVICE")  + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=com_huawei_android_launcher_permission_READ_SETTINGS  )) +
	geom_density(position = "dodge",alpha=1 ) +
	labs(x="com_huawei_android_launcher_permission_READ_SETTINGS",title= "Density plot for variable com_huawei_android_launcher_permission_READ_SETTINGS ") +
	xlab("com_huawei_android_launcher_permission_READ_SETTINGS")  + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_READ_SMS  )) +
	geom_density(position = "dodge",alpha=1 ) +
	labs(x="android_permission_READ_SMS",title= "Density plot for variable android_permission_READ_SMS ") +
	xlab("android_permission_READ_SMS")  + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_PROCESS_INCOMING_CALLS  )) +
	geom_density(position = "dodge",alpha=1 ) +
	labs(x="android_permission_PROCESS_INCOMING_CALLS",title= "Density plot for variable android_permission_PROCESS_INCOMING_CALLS ") +
	xlab("android_permission_PROCESS_INCOMING_CALLS")  + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=Result  )) +
	geom_density(position = "dodge",alpha=1 ) +
	labs(x="Result",title= "Density plot for variable Result ") +
	xlab("Result")  + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```
# Density Plot

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_GET_ACCOUNTS  )) +
	geom_density(position = "stack",alpha=1  , color ="darkgray" ) +
	labs(x="android_permission_GET_ACCOUNTS",title= "Density plot for variable android_permission_GET_ACCOUNTS ") +
	xlab("android_permission_GET_ACCOUNTS")  +    coord_flip() + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=com_sonyericsson_home_permission_BROADCAST_BADGE  )) +
	geom_density(position = "stack",alpha=1  , color ="darkgray" ) +
	labs(x="com_sonyericsson_home_permission_BROADCAST_BADGE",title= "Density plot for variable com_sonyericsson_home_permission_BROADCAST_BADGE ") +
	xlab("com_sonyericsson_home_permission_BROADCAST_BADGE")  +    coord_flip() + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_READ_PROFILE  )) +
	geom_density(position = "stack",alpha=1  , color ="darkgray" ) +
	labs(x="android_permission_READ_PROFILE",title= "Density plot for variable android_permission_READ_PROFILE ") +
	xlab("android_permission_READ_PROFILE")  +    coord_flip() + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_MANAGE_ACCOUNTS  )) +
	geom_density(position = "stack",alpha=1  , color ="darkgray" ) +
	labs(x="android_permission_MANAGE_ACCOUNTS",title= "Density plot for variable android_permission_MANAGE_ACCOUNTS ") +
	xlab("android_permission_MANAGE_ACCOUNTS")  +    coord_flip() + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_WRITE_SYNC_SETTINGS  )) +
	geom_density(position = "stack",alpha=1  , color ="darkgray" ) +
	labs(x="android_permission_WRITE_SYNC_SETTINGS",title= "Density plot for variable android_permission_WRITE_SYNC_SETTINGS ") +
	xlab("android_permission_WRITE_SYNC_SETTINGS")  +    coord_flip() + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_READ_EXTERNAL_STORAGE  )) +
	geom_density(position = "stack",alpha=1  , color ="darkgray" ) +
	labs(x="android_permission_READ_EXTERNAL_STORAGE",title= "Density plot for variable android_permission_READ_EXTERNAL_STORAGE ") +
	xlab("android_permission_READ_EXTERNAL_STORAGE")  +    coord_flip() + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_RECEIVE_SMS  )) +
	geom_density(position = "stack",alpha=1  , color ="darkgray" ) +
	labs(x="android_permission_RECEIVE_SMS",title= "Density plot for variable android_permission_RECEIVE_SMS ") +
	xlab("android_permission_RECEIVE_SMS")  +    coord_flip() + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=com_android_launcher_permission_READ_SETTINGS  )) +
	geom_density(position = "stack",alpha=1  , color ="darkgray" ) +
	labs(x="com_android_launcher_permission_READ_SETTINGS",title= "Density plot for variable com_android_launcher_permission_READ_SETTINGS ") +
	xlab("com_android_launcher_permission_READ_SETTINGS")  +    coord_flip() + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_WRITE_SETTINGS  )) +
	geom_density(position = "stack",alpha=1  , color ="darkgray" ) +
	labs(x="android_permission_WRITE_SETTINGS",title= "Density plot for variable android_permission_WRITE_SETTINGS ") +
	xlab("android_permission_WRITE_SETTINGS")  +    coord_flip() + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=com_google_android_providers_gsf_permission_READ_GSERVICES  )) +
	geom_density(position = "stack",alpha=1  , color ="darkgray" ) +
	labs(x="com_google_android_providers_gsf_permission_READ_GSERVICES",title= "Density plot for variable com_google_android_providers_gsf_permission_READ_GSERVICES ") +
	xlab("com_google_android_providers_gsf_permission_READ_GSERVICES")  +    coord_flip() + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_DOWNLOAD_WITHOUT_NOTIFICATION  )) +
	geom_density(position = "stack",alpha=1  , color ="darkgray" ) +
	labs(x="android_permission_DOWNLOAD_WITHOUT_NOTIFICATION",title= "Density plot for variable android_permission_DOWNLOAD_WITHOUT_NOTIFICATION ") +
	xlab("android_permission_DOWNLOAD_WITHOUT_NOTIFICATION")  +    coord_flip() + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_GET_TASKS  )) +
	geom_density(position = "stack",alpha=1  , color ="darkgray" ) +
	labs(x="android_permission_GET_TASKS",title= "Density plot for variable android_permission_GET_TASKS ") +
	xlab("android_permission_GET_TASKS")  +    coord_flip() + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_WRITE_EXTERNAL_STORAGE  )) +
	geom_density(position = "stack",alpha=1  , color ="darkgray" ) +
	labs(x="android_permission_WRITE_EXTERNAL_STORAGE",title= "Density plot for variable android_permission_WRITE_EXTERNAL_STORAGE ") +
	xlab("android_permission_WRITE_EXTERNAL_STORAGE")  +    coord_flip() + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_RECORD_AUDIO  )) +
	geom_density(position = "stack",alpha=1  , color ="darkgray" ) +
	labs(x="android_permission_RECORD_AUDIO",title= "Density plot for variable android_permission_RECORD_AUDIO ") +
	xlab("android_permission_RECORD_AUDIO")  +    coord_flip() + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=com_huawei_android_launcher_permission_CHANGE_BADGE  )) +
	geom_density(position = "stack",alpha=1  , color ="darkgray" ) +
	labs(x="com_huawei_android_launcher_permission_CHANGE_BADGE",title= "Density plot for variable com_huawei_android_launcher_permission_CHANGE_BADGE ") +
	xlab("com_huawei_android_launcher_permission_CHANGE_BADGE")  +    coord_flip() + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=com_oppo_launcher_permission_READ_SETTINGS  )) +
	geom_density(position = "stack",alpha=1  , color ="darkgray" ) +
	labs(x="com_oppo_launcher_permission_READ_SETTINGS",title= "Density plot for variable com_oppo_launcher_permission_READ_SETTINGS ") +
	xlab("com_oppo_launcher_permission_READ_SETTINGS")  +    coord_flip() + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_CHANGE_NETWORK_STATE  )) +
	geom_density(position = "stack",alpha=1  , color ="darkgray" ) +
	labs(x="android_permission_CHANGE_NETWORK_STATE",title= "Density plot for variable android_permission_CHANGE_NETWORK_STATE ") +
	xlab("android_permission_CHANGE_NETWORK_STATE")  +    coord_flip() + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=com_android_launcher_permission_INSTALL_SHORTCUT  )) +
	geom_density(position = "stack",alpha=1  , color ="darkgray" ) +
	labs(x="com_android_launcher_permission_INSTALL_SHORTCUT",title= "Density plot for variable com_android_launcher_permission_INSTALL_SHORTCUT ") +
	xlab("com_android_launcher_permission_INSTALL_SHORTCUT")  +    coord_flip() + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_android_permission_READ_PHONE_STATE  )) +
	geom_density(position = "stack",alpha=1  , color ="darkgray" ) +
	labs(x="android_permission_android_permission_READ_PHONE_STATE",title= "Density plot for variable android_permission_android_permission_READ_PHONE_STATE ") +
	xlab("android_permission_android_permission_READ_PHONE_STATE")  +    coord_flip() + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_CALL_PHONE  )) +
	geom_density(position = "stack",alpha=1  , color ="darkgray" ) +
	labs(x="android_permission_CALL_PHONE",title= "Density plot for variable android_permission_CALL_PHONE ") +
	xlab("android_permission_CALL_PHONE")  +    coord_flip() + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_WRITE_CONTACTS  )) +
	geom_density(position = "stack",alpha=1  , color ="darkgray" ) +
	labs(x="android_permission_WRITE_CONTACTS",title= "Density plot for variable android_permission_WRITE_CONTACTS ") +
	xlab("android_permission_WRITE_CONTACTS")  +    coord_flip() + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_READ_PHONE_STATE  )) +
	geom_density(position = "stack",alpha=1  , color ="darkgray" ) +
	labs(x="android_permission_READ_PHONE_STATE",title= "Density plot for variable android_permission_READ_PHONE_STATE ") +
	xlab("android_permission_READ_PHONE_STATE")  +    coord_flip() + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=com_samsung_android_providers_context_permission_WRITE_USE_APP_FEATURE_SURVEY  )) +
	geom_density(position = "stack",alpha=1  , color ="darkgray" ) +
	labs(x="com_samsung_android_providers_context_permission_WRITE_USE_APP_FEATURE_SURVEY",title= "Density plot for variable com_samsung_android_providers_context_permission_WRITE_USE_APP_FEATURE_SURVEY ") +
	xlab("com_samsung_android_providers_context_permission_WRITE_USE_APP_FEATURE_SURVEY")  +    coord_flip() + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_MODIFY_AUDIO_SETTINGS  )) +
	geom_density(position = "stack",alpha=1  , color ="darkgray" ) +
	labs(x="android_permission_MODIFY_AUDIO_SETTINGS",title= "Density plot for variable android_permission_MODIFY_AUDIO_SETTINGS ") +
	xlab("android_permission_MODIFY_AUDIO_SETTINGS")  +    coord_flip() + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_ACCESS_LOCATION_EXTRA_COMMANDS  )) +
	geom_density(position = "stack",alpha=1  , color ="darkgray" ) +
	labs(x="android_permission_ACCESS_LOCATION_EXTRA_COMMANDS",title= "Density plot for variable android_permission_ACCESS_LOCATION_EXTRA_COMMANDS ") +
	xlab("android_permission_ACCESS_LOCATION_EXTRA_COMMANDS")  +    coord_flip() + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_INTERNET  )) +
	geom_density(position = "stack",alpha=1  , color ="darkgray" ) +
	labs(x="android_permission_INTERNET",title= "Density plot for variable android_permission_INTERNET ") +
	xlab("android_permission_INTERNET")  +    coord_flip() + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_MOUNT_UNMOUNT_FILESYSTEMS  )) +
	geom_density(position = "stack",alpha=1  , color ="darkgray" ) +
	labs(x="android_permission_MOUNT_UNMOUNT_FILESYSTEMS",title= "Density plot for variable android_permission_MOUNT_UNMOUNT_FILESYSTEMS ") +
	xlab("android_permission_MOUNT_UNMOUNT_FILESYSTEMS")  +    coord_flip() + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=com_majeur_launcher_permission_UPDATE_BADGE  )) +
	geom_density(position = "stack",alpha=1  , color ="darkgray" ) +
	labs(x="com_majeur_launcher_permission_UPDATE_BADGE",title= "Density plot for variable com_majeur_launcher_permission_UPDATE_BADGE ") +
	xlab("com_majeur_launcher_permission_UPDATE_BADGE")  +    coord_flip() + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_AUTHENTICATE_ACCOUNTS  )) +
	geom_density(position = "stack",alpha=1  , color ="darkgray" ) +
	labs(x="android_permission_AUTHENTICATE_ACCOUNTS",title= "Density plot for variable android_permission_AUTHENTICATE_ACCOUNTS ") +
	xlab("android_permission_AUTHENTICATE_ACCOUNTS")  +    coord_flip() + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=com_htc_launcher_permission_READ_SETTINGS  )) +
	geom_density(position = "stack",alpha=1  , color ="darkgray" ) +
	labs(x="com_htc_launcher_permission_READ_SETTINGS",title= "Density plot for variable com_htc_launcher_permission_READ_SETTINGS ") +
	xlab("com_htc_launcher_permission_READ_SETTINGS")  +    coord_flip() + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_ACCESS_WIFI_STATE  )) +
	geom_density(position = "stack",alpha=1  , color ="darkgray" ) +
	labs(x="android_permission_ACCESS_WIFI_STATE",title= "Density plot for variable android_permission_ACCESS_WIFI_STATE ") +
	xlab("android_permission_ACCESS_WIFI_STATE")  +    coord_flip() + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_FLASHLIGHT  )) +
	geom_density(position = "stack",alpha=1  , color ="darkgray" ) +
	labs(x="android_permission_FLASHLIGHT",title= "Density plot for variable android_permission_FLASHLIGHT ") +
	xlab("android_permission_FLASHLIGHT")  +    coord_flip() + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_READ_APP_BADGE  )) +
	geom_density(position = "stack",alpha=1  , color ="darkgray" ) +
	labs(x="android_permission_READ_APP_BADGE",title= "Density plot for variable android_permission_READ_APP_BADGE ") +
	xlab("android_permission_READ_APP_BADGE")  +    coord_flip() + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_USE_CREDENTIALS  )) +
	geom_density(position = "stack",alpha=1  , color ="darkgray" ) +
	labs(x="android_permission_USE_CREDENTIALS",title= "Density plot for variable android_permission_USE_CREDENTIALS ") +
	xlab("android_permission_USE_CREDENTIALS")  +    coord_flip() + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_CHANGE_CONFIGURATION  )) +
	geom_density(position = "stack",alpha=1  , color ="darkgray" ) +
	labs(x="android_permission_CHANGE_CONFIGURATION",title= "Density plot for variable android_permission_CHANGE_CONFIGURATION ") +
	xlab("android_permission_CHANGE_CONFIGURATION")  +    coord_flip() + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_READ_SYNC_SETTINGS  )) +
	geom_density(position = "stack",alpha=1  , color ="darkgray" ) +
	labs(x="android_permission_READ_SYNC_SETTINGS",title= "Density plot for variable android_permission_READ_SYNC_SETTINGS ") +
	xlab("android_permission_READ_SYNC_SETTINGS")  +    coord_flip() + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_BROADCAST_STICKY  )) +
	geom_density(position = "stack",alpha=1  , color ="darkgray" ) +
	labs(x="android_permission_BROADCAST_STICKY",title= "Density plot for variable android_permission_BROADCAST_STICKY ") +
	xlab("android_permission_BROADCAST_STICKY")  +    coord_flip() + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=com_anddoes_launcher_permission_UPDATE_COUNT  )) +
	geom_density(position = "stack",alpha=1  , color ="darkgray" ) +
	labs(x="com_anddoes_launcher_permission_UPDATE_COUNT",title= "Density plot for variable com_anddoes_launcher_permission_UPDATE_COUNT ") +
	xlab("com_anddoes_launcher_permission_UPDATE_COUNT")  +    coord_flip() + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=com_android_alarm_permission_SET_ALARM  )) +
	geom_density(position = "stack",alpha=1  , color ="darkgray" ) +
	labs(x="com_android_alarm_permission_SET_ALARM",title= "Density plot for variable com_android_alarm_permission_SET_ALARM ") +
	xlab("com_android_alarm_permission_SET_ALARM")  +    coord_flip() + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=com_google_android_c2dm_permission_RECEIVE  )) +
	geom_density(position = "stack",alpha=1  , color ="darkgray" ) +
	labs(x="com_google_android_c2dm_permission_RECEIVE",title= "Density plot for variable com_google_android_c2dm_permission_RECEIVE ") +
	xlab("com_google_android_c2dm_permission_RECEIVE")  +    coord_flip() + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_KILL_BACKGROUND_PROCESSES  )) +
	geom_density(position = "stack",alpha=1  , color ="darkgray" ) +
	labs(x="android_permission_KILL_BACKGROUND_PROCESSES",title= "Density plot for variable android_permission_KILL_BACKGROUND_PROCESSES ") +
	xlab("android_permission_KILL_BACKGROUND_PROCESSES")  +    coord_flip() + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=com_sonymobile_home_permission_PROVIDER_INSERT_BADGE  )) +
	geom_density(position = "stack",alpha=1  , color ="darkgray" ) +
	labs(x="com_sonymobile_home_permission_PROVIDER_INSERT_BADGE",title= "Density plot for variable com_sonymobile_home_permission_PROVIDER_INSERT_BADGE ") +
	xlab("com_sonymobile_home_permission_PROVIDER_INSERT_BADGE")  +    coord_flip() + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=com_sec_android_provider_badge_permission_READ  )) +
	geom_density(position = "stack",alpha=1  , color ="darkgray" ) +
	labs(x="com_sec_android_provider_badge_permission_READ",title= "Density plot for variable com_sec_android_provider_badge_permission_READ ") +
	xlab("com_sec_android_provider_badge_permission_READ")  +    coord_flip() + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_WRITE_CALENDAR  )) +
	geom_density(position = "stack",alpha=1  , color ="darkgray" ) +
	labs(x="android_permission_WRITE_CALENDAR",title= "Density plot for variable android_permission_WRITE_CALENDAR ") +
	xlab("android_permission_WRITE_CALENDAR")  +    coord_flip() + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_SEND_SMS  )) +
	geom_density(position = "stack",alpha=1  , color ="darkgray" ) +
	labs(x="android_permission_SEND_SMS",title= "Density plot for variable android_permission_SEND_SMS ") +
	xlab("android_permission_SEND_SMS")  +    coord_flip() + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=com_huawei_android_launcher_permission_WRITE_SETTINGS  )) +
	geom_density(position = "stack",alpha=1  , color ="darkgray" ) +
	labs(x="com_huawei_android_launcher_permission_WRITE_SETTINGS",title= "Density plot for variable com_huawei_android_launcher_permission_WRITE_SETTINGS ") +
	xlab("com_huawei_android_launcher_permission_WRITE_SETTINGS")  +    coord_flip() + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_REQUEST_INSTALL_PACKAGES  )) +
	geom_density(position = "stack",alpha=1  , color ="darkgray" ) +
	labs(x="android_permission_REQUEST_INSTALL_PACKAGES",title= "Density plot for variable android_permission_REQUEST_INSTALL_PACKAGES ") +
	xlab("android_permission_REQUEST_INSTALL_PACKAGES")  +    coord_flip() + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_SET_WALLPAPER_HINTS  )) +
	geom_density(position = "stack",alpha=1  , color ="darkgray" ) +
	labs(x="android_permission_SET_WALLPAPER_HINTS",title= "Density plot for variable android_permission_SET_WALLPAPER_HINTS ") +
	xlab("android_permission_SET_WALLPAPER_HINTS")  +    coord_flip() + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_SET_WALLPAPER  )) +
	geom_density(position = "stack",alpha=1  , color ="darkgray" ) +
	labs(x="android_permission_SET_WALLPAPER",title= "Density plot for variable android_permission_SET_WALLPAPER ") +
	xlab("android_permission_SET_WALLPAPER")  +    coord_flip() + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=com_oppo_launcher_permission_WRITE_SETTINGS  )) +
	geom_density(position = "stack",alpha=1  , color ="darkgray" ) +
	labs(x="com_oppo_launcher_permission_WRITE_SETTINGS",title= "Density plot for variable com_oppo_launcher_permission_WRITE_SETTINGS ") +
	xlab("com_oppo_launcher_permission_WRITE_SETTINGS")  +    coord_flip() + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_RESTART_PACKAGES  )) +
	geom_density(position = "stack",alpha=1  , color ="darkgray" ) +
	labs(x="android_permission_RESTART_PACKAGES",title= "Density plot for variable android_permission_RESTART_PACKAGES ") +
	xlab("android_permission_RESTART_PACKAGES")  +    coord_flip() + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=me_everything_badger_permission_BADGE_COUNT_WRITE  )) +
	geom_density(position = "stack",alpha=1  , color ="darkgray" ) +
	labs(x="me_everything_badger_permission_BADGE_COUNT_WRITE",title= "Density plot for variable me_everything_badger_permission_BADGE_COUNT_WRITE ") +
	xlab("me_everything_badger_permission_BADGE_COUNT_WRITE")  +    coord_flip() + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_ACCESS_MOCK_LOCATION  )) +
	geom_density(position = "stack",alpha=1  , color ="darkgray" ) +
	labs(x="android_permission_ACCESS_MOCK_LOCATION",title= "Density plot for variable android_permission_ACCESS_MOCK_LOCATION ") +
	xlab("android_permission_ACCESS_MOCK_LOCATION")  +    coord_flip() + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_ACCESS_COARSE_LOCATION  )) +
	geom_density(position = "stack",alpha=1  , color ="darkgray" ) +
	labs(x="android_permission_ACCESS_COARSE_LOCATION",title= "Density plot for variable android_permission_ACCESS_COARSE_LOCATION ") +
	xlab("android_permission_ACCESS_COARSE_LOCATION")  +    coord_flip() + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_READ_LOGS  )) +
	geom_density(position = "stack",alpha=1  , color ="darkgray" ) +
	labs(x="android_permission_READ_LOGS",title= "Density plot for variable android_permission_READ_LOGS ") +
	xlab("android_permission_READ_LOGS")  +    coord_flip() + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=com_google_android_gms_permission_ACTIVITY_RECOGNITION  )) +
	geom_density(position = "stack",alpha=1  , color ="darkgray" ) +
	labs(x="com_google_android_gms_permission_ACTIVITY_RECOGNITION",title= "Density plot for variable com_google_android_gms_permission_ACTIVITY_RECOGNITION ") +
	xlab("com_google_android_gms_permission_ACTIVITY_RECOGNITION")  +    coord_flip() + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=com_amazon_device_messaging_permission_RECEIVE  )) +
	geom_density(position = "stack",alpha=1  , color ="darkgray" ) +
	labs(x="com_amazon_device_messaging_permission_RECEIVE",title= "Density plot for variable com_amazon_device_messaging_permission_RECEIVE ") +
	xlab("com_amazon_device_messaging_permission_RECEIVE")  +    coord_flip() + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_SYSTEM_ALERT_WINDOW  )) +
	geom_density(position = "stack",alpha=1  , color ="darkgray" ) +
	labs(x="android_permission_SYSTEM_ALERT_WINDOW",title= "Density plot for variable android_permission_SYSTEM_ALERT_WINDOW ") +
	xlab("android_permission_SYSTEM_ALERT_WINDOW")  +    coord_flip() + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_DISABLE_KEYGUARD  )) +
	geom_density(position = "stack",alpha=1  , color ="darkgray" ) +
	labs(x="android_permission_DISABLE_KEYGUARD",title= "Density plot for variable android_permission_DISABLE_KEYGUARD ") +
	xlab("android_permission_DISABLE_KEYGUARD")  +    coord_flip() + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_USE_FINGERPRINT  )) +
	geom_density(position = "stack",alpha=1  , color ="darkgray" ) +
	labs(x="android_permission_USE_FINGERPRINT",title= "Density plot for variable android_permission_USE_FINGERPRINT ") +
	xlab("android_permission_USE_FINGERPRINT")  +    coord_flip() + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=me_everything_badger_permission_BADGE_COUNT_READ  )) +
	geom_density(position = "stack",alpha=1  , color ="darkgray" ) +
	labs(x="me_everything_badger_permission_BADGE_COUNT_READ",title= "Density plot for variable me_everything_badger_permission_BADGE_COUNT_READ ") +
	xlab("me_everything_badger_permission_BADGE_COUNT_READ")  +    coord_flip() + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_CHANGE_WIFI_STATE  )) +
	geom_density(position = "stack",alpha=1  , color ="darkgray" ) +
	labs(x="android_permission_CHANGE_WIFI_STATE",title= "Density plot for variable android_permission_CHANGE_WIFI_STATE ") +
	xlab("android_permission_CHANGE_WIFI_STATE")  +    coord_flip() + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_READ_CONTACTS  )) +
	geom_density(position = "stack",alpha=1  , color ="darkgray" ) +
	labs(x="android_permission_READ_CONTACTS",title= "Density plot for variable android_permission_READ_CONTACTS ") +
	xlab("android_permission_READ_CONTACTS")  +    coord_flip() + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=com_android_vending_BILLING  )) +
	geom_density(position = "stack",alpha=1  , color ="darkgray" ) +
	labs(x="com_android_vending_BILLING",title= "Density plot for variable com_android_vending_BILLING ") +
	xlab("com_android_vending_BILLING")  +    coord_flip() + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_READ_CALENDAR  )) +
	geom_density(position = "stack",alpha=1  , color ="darkgray" ) +
	labs(x="android_permission_READ_CALENDAR",title= "Density plot for variable android_permission_READ_CALENDAR ") +
	xlab("android_permission_READ_CALENDAR")  +    coord_flip() + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_RECEIVE_BOOT_COMPLETED  )) +
	geom_density(position = "stack",alpha=1  , color ="darkgray" ) +
	labs(x="android_permission_RECEIVE_BOOT_COMPLETED",title= "Density plot for variable android_permission_RECEIVE_BOOT_COMPLETED ") +
	xlab("android_permission_RECEIVE_BOOT_COMPLETED")  +    coord_flip() + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_WAKE_LOCK  )) +
	geom_density(position = "stack",alpha=1  , color ="darkgray" ) +
	labs(x="android_permission_WAKE_LOCK",title= "Density plot for variable android_permission_WAKE_LOCK ") +
	xlab("android_permission_WAKE_LOCK")  +    coord_flip() + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_ACCESS_FINE_LOCATION  )) +
	geom_density(position = "stack",alpha=1  , color ="darkgray" ) +
	labs(x="android_permission_ACCESS_FINE_LOCATION",title= "Density plot for variable android_permission_ACCESS_FINE_LOCATION ") +
	xlab("android_permission_ACCESS_FINE_LOCATION")  +    coord_flip() + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_BLUETOOTH  )) +
	geom_density(position = "stack",alpha=1  , color ="darkgray" ) +
	labs(x="android_permission_BLUETOOTH",title= "Density plot for variable android_permission_BLUETOOTH ") +
	xlab("android_permission_BLUETOOTH")  +    coord_flip() + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_CAMERA  )) +
	geom_density(position = "stack",alpha=1  , color ="darkgray" ) +
	labs(x="android_permission_CAMERA",title= "Density plot for variable android_permission_CAMERA ") +
	xlab("android_permission_CAMERA")  +    coord_flip() + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=com_android_vending_CHECK_LICENSE  )) +
	geom_density(position = "stack",alpha=1  , color ="darkgray" ) +
	labs(x="com_android_vending_CHECK_LICENSE",title= "Density plot for variable com_android_vending_CHECK_LICENSE ") +
	xlab("com_android_vending_CHECK_LICENSE")  +    coord_flip() + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_FOREGROUND_SERVICE  )) +
	geom_density(position = "stack",alpha=1  , color ="darkgray" ) +
	labs(x="android_permission_FOREGROUND_SERVICE",title= "Density plot for variable android_permission_FOREGROUND_SERVICE ") +
	xlab("android_permission_FOREGROUND_SERVICE")  +    coord_flip() + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_BLUETOOTH_ADMIN  )) +
	geom_density(position = "stack",alpha=1  , color ="darkgray" ) +
	labs(x="android_permission_BLUETOOTH_ADMIN",title= "Density plot for variable android_permission_BLUETOOTH_ADMIN ") +
	xlab("android_permission_BLUETOOTH_ADMIN")  +    coord_flip() + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_VIBRATE  )) +
	geom_density(position = "stack",alpha=1  , color ="darkgray" ) +
	labs(x="android_permission_VIBRATE",title= "Density plot for variable android_permission_VIBRATE ") +
	xlab("android_permission_VIBRATE")  +    coord_flip() + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_NFC  )) +
	geom_density(position = "stack",alpha=1  , color ="darkgray" ) +
	labs(x="android_permission_NFC",title= "Density plot for variable android_permission_NFC ") +
	xlab("android_permission_NFC")  +    coord_flip() + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_RECEIVE_USER_PRESENT  )) +
	geom_density(position = "stack",alpha=1  , color ="darkgray" ) +
	labs(x="android_permission_RECEIVE_USER_PRESENT",title= "Density plot for variable android_permission_RECEIVE_USER_PRESENT ") +
	xlab("android_permission_RECEIVE_USER_PRESENT")  +    coord_flip() + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_CLEAR_APP_CACHE  )) +
	geom_density(position = "stack",alpha=1  , color ="darkgray" ) +
	labs(x="android_permission_CLEAR_APP_CACHE",title= "Density plot for variable android_permission_CLEAR_APP_CACHE ") +
	xlab("android_permission_CLEAR_APP_CACHE")  +    coord_flip() + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=com_android_launcher_permission_UNINSTALL_SHORTCUT  )) +
	geom_density(position = "stack",alpha=1  , color ="darkgray" ) +
	labs(x="com_android_launcher_permission_UNINSTALL_SHORTCUT",title= "Density plot for variable com_android_launcher_permission_UNINSTALL_SHORTCUT ") +
	xlab("com_android_launcher_permission_UNINSTALL_SHORTCUT")  +    coord_flip() + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=com_sec_android_iap_permission_BILLING  )) +
	geom_density(position = "stack",alpha=1  , color ="darkgray" ) +
	labs(x="com_sec_android_iap_permission_BILLING",title= "Density plot for variable com_sec_android_iap_permission_BILLING ") +
	xlab("com_sec_android_iap_permission_BILLING")  +    coord_flip() + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=com_htc_launcher_permission_UPDATE_SHORTCUT  )) +
	geom_density(position = "stack",alpha=1  , color ="darkgray" ) +
	labs(x="com_htc_launcher_permission_UPDATE_SHORTCUT",title= "Density plot for variable com_htc_launcher_permission_UPDATE_SHORTCUT ") +
	xlab("com_htc_launcher_permission_UPDATE_SHORTCUT")  +    coord_flip() + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=com_sec_android_provider_badge_permission_WRITE  )) +
	geom_density(position = "stack",alpha=1  , color ="darkgray" ) +
	labs(x="com_sec_android_provider_badge_permission_WRITE",title= "Density plot for variable com_sec_android_provider_badge_permission_WRITE ") +
	xlab("com_sec_android_provider_badge_permission_WRITE")  +    coord_flip() + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_ACCESS_NETWORK_STATE  )) +
	geom_density(position = "stack",alpha=1  , color ="darkgray" ) +
	labs(x="android_permission_ACCESS_NETWORK_STATE",title= "Density plot for variable android_permission_ACCESS_NETWORK_STATE ") +
	xlab("android_permission_ACCESS_NETWORK_STATE")  +    coord_flip() + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=com_google_android_finsky_permission_BIND_GET_INSTALL_REFERRER_SERVICE  )) +
	geom_density(position = "stack",alpha=1  , color ="darkgray" ) +
	labs(x="com_google_android_finsky_permission_BIND_GET_INSTALL_REFERRER_SERVICE",title= "Density plot for variable com_google_android_finsky_permission_BIND_GET_INSTALL_REFERRER_SERVICE ") +
	xlab("com_google_android_finsky_permission_BIND_GET_INSTALL_REFERRER_SERVICE")  +    coord_flip() + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=com_huawei_android_launcher_permission_READ_SETTINGS  )) +
	geom_density(position = "stack",alpha=1  , color ="darkgray" ) +
	labs(x="com_huawei_android_launcher_permission_READ_SETTINGS",title= "Density plot for variable com_huawei_android_launcher_permission_READ_SETTINGS ") +
	xlab("com_huawei_android_launcher_permission_READ_SETTINGS")  +    coord_flip() + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_READ_SMS  )) +
	geom_density(position = "stack",alpha=1  , color ="darkgray" ) +
	labs(x="android_permission_READ_SMS",title= "Density plot for variable android_permission_READ_SMS ") +
	xlab("android_permission_READ_SMS")  +    coord_flip() + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_PROCESS_INCOMING_CALLS  )) +
	geom_density(position = "stack",alpha=1  , color ="darkgray" ) +
	labs(x="android_permission_PROCESS_INCOMING_CALLS",title= "Density plot for variable android_permission_PROCESS_INCOMING_CALLS ") +
	xlab("android_permission_PROCESS_INCOMING_CALLS")  +    coord_flip() + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```

```{r}

## [Density Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=Result  )) +
	geom_density(position = "stack",alpha=1  , color ="darkgray" ) +
	labs(x="Result",title= "Density plot for variable Result ") +
	xlab("Result")  +    coord_flip() + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))      

```
# Contour Plot

```{r}
## [Contour Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=Result,y=android_permission_GET_ACCOUNTS )) +
	geom_density2d(stat = "density2d",position = "identity") +
	labs(x="Result",y="android_permission_GET_ACCOUNTS", title= "Contour plot  for X axis variable: Result, Y axis variable: android_permission_GET_ACCOUNTS") +
	xlab("Result") +
	ylab("android_permission_GET_ACCOUNTS") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Contour Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=Result,y=com_sonyericsson_home_permission_BROADCAST_BADGE )) +
	geom_density2d(stat = "density2d",position = "identity") +
	labs(x="Result",y="com_sonyericsson_home_permission_BROADCAST_BADGE", title= "Contour plot  for X axis variable: Result, Y axis variable: com_sonyericsson_home_permission_BROADCAST_BADGE") +
	xlab("Result") +
	ylab("com_sonyericsson_home_permission_BROADCAST_BADGE") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Contour Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=Result,y=android_permission_READ_PROFILE )) +
	geom_density2d(stat = "density2d",position = "identity") +
	labs(x="Result",y="android_permission_READ_PROFILE", title= "Contour plot  for X axis variable: Result, Y axis variable: android_permission_READ_PROFILE") +
	xlab("Result") +
	ylab("android_permission_READ_PROFILE") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Contour Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=Result,y=android_permission_MANAGE_ACCOUNTS )) +
	geom_density2d(stat = "density2d",position = "identity") +
	labs(x="Result",y="android_permission_MANAGE_ACCOUNTS", title= "Contour plot  for X axis variable: Result, Y axis variable: android_permission_MANAGE_ACCOUNTS") +
	xlab("Result") +
	ylab("android_permission_MANAGE_ACCOUNTS") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Contour Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=Result,y=android_permission_WRITE_SYNC_SETTINGS )) +
	geom_density2d(stat = "density2d",position = "identity") +
	labs(x="Result",y="android_permission_WRITE_SYNC_SETTINGS", title= "Contour plot  for X axis variable: Result, Y axis variable: android_permission_WRITE_SYNC_SETTINGS") +
	xlab("Result") +
	ylab("android_permission_WRITE_SYNC_SETTINGS") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Contour Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=Result,y=android_permission_READ_EXTERNAL_STORAGE )) +
	geom_density2d(stat = "density2d",position = "identity") +
	labs(x="Result",y="android_permission_READ_EXTERNAL_STORAGE", title= "Contour plot  for X axis variable: Result, Y axis variable: android_permission_READ_EXTERNAL_STORAGE") +
	xlab("Result") +
	ylab("android_permission_READ_EXTERNAL_STORAGE") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Contour Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=Result,y=android_permission_RECEIVE_SMS )) +
	geom_density2d(stat = "density2d",position = "identity") +
	labs(x="Result",y="android_permission_RECEIVE_SMS", title= "Contour plot  for X axis variable: Result, Y axis variable: android_permission_RECEIVE_SMS") +
	xlab("Result") +
	ylab("android_permission_RECEIVE_SMS") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Contour Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=Result,y=com_android_launcher_permission_READ_SETTINGS )) +
	geom_density2d(stat = "density2d",position = "identity") +
	labs(x="Result",y="com_android_launcher_permission_READ_SETTINGS", title= "Contour plot  for X axis variable: Result, Y axis variable: com_android_launcher_permission_READ_SETTINGS") +
	xlab("Result") +
	ylab("com_android_launcher_permission_READ_SETTINGS") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Contour Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=Result,y=android_permission_WRITE_SETTINGS )) +
	geom_density2d(stat = "density2d",position = "identity") +
	labs(x="Result",y="android_permission_WRITE_SETTINGS", title= "Contour plot  for X axis variable: Result, Y axis variable: android_permission_WRITE_SETTINGS") +
	xlab("Result") +
	ylab("android_permission_WRITE_SETTINGS") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Contour Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=Result,y=com_google_android_providers_gsf_permission_READ_GSERVICES )) +
	geom_density2d(stat = "density2d",position = "identity") +
	labs(x="Result",y="com_google_android_providers_gsf_permission_READ_GSERVICES", title= "Contour plot  for X axis variable: Result, Y axis variable: com_google_android_providers_gsf_permission_READ_GSERVICES") +
	xlab("Result") +
	ylab("com_google_android_providers_gsf_permission_READ_GSERVICES") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Contour Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=Result,y=android_permission_DOWNLOAD_WITHOUT_NOTIFICATION )) +
	geom_density2d(stat = "density2d",position = "identity") +
	labs(x="Result",y="android_permission_DOWNLOAD_WITHOUT_NOTIFICATION", title= "Contour plot  for X axis variable: Result, Y axis variable: android_permission_DOWNLOAD_WITHOUT_NOTIFICATION") +
	xlab("Result") +
	ylab("android_permission_DOWNLOAD_WITHOUT_NOTIFICATION") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Contour Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=Result,y=android_permission_GET_TASKS )) +
	geom_density2d(stat = "density2d",position = "identity") +
	labs(x="Result",y="android_permission_GET_TASKS", title= "Contour plot  for X axis variable: Result, Y axis variable: android_permission_GET_TASKS") +
	xlab("Result") +
	ylab("android_permission_GET_TASKS") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Contour Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=Result,y=android_permission_WRITE_EXTERNAL_STORAGE )) +
	geom_density2d(stat = "density2d",position = "identity") +
	labs(x="Result",y="android_permission_WRITE_EXTERNAL_STORAGE", title= "Contour plot  for X axis variable: Result, Y axis variable: android_permission_WRITE_EXTERNAL_STORAGE") +
	xlab("Result") +
	ylab("android_permission_WRITE_EXTERNAL_STORAGE") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Contour Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=Result,y=android_permission_RECORD_AUDIO )) +
	geom_density2d(stat = "density2d",position = "identity") +
	labs(x="Result",y="android_permission_RECORD_AUDIO", title= "Contour plot  for X axis variable: Result, Y axis variable: android_permission_RECORD_AUDIO") +
	xlab("Result") +
	ylab("android_permission_RECORD_AUDIO") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Contour Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=Result,y=com_huawei_android_launcher_permission_CHANGE_BADGE )) +
	geom_density2d(stat = "density2d",position = "identity") +
	labs(x="Result",y="com_huawei_android_launcher_permission_CHANGE_BADGE", title= "Contour plot  for X axis variable: Result, Y axis variable: com_huawei_android_launcher_permission_CHANGE_BADGE") +
	xlab("Result") +
	ylab("com_huawei_android_launcher_permission_CHANGE_BADGE") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Contour Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=Result,y=com_oppo_launcher_permission_READ_SETTINGS )) +
	geom_density2d(stat = "density2d",position = "identity") +
	labs(x="Result",y="com_oppo_launcher_permission_READ_SETTINGS", title= "Contour plot  for X axis variable: Result, Y axis variable: com_oppo_launcher_permission_READ_SETTINGS") +
	xlab("Result") +
	ylab("com_oppo_launcher_permission_READ_SETTINGS") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Contour Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=Result,y=android_permission_CHANGE_NETWORK_STATE )) +
	geom_density2d(stat = "density2d",position = "identity") +
	labs(x="Result",y="android_permission_CHANGE_NETWORK_STATE", title= "Contour plot  for X axis variable: Result, Y axis variable: android_permission_CHANGE_NETWORK_STATE") +
	xlab("Result") +
	ylab("android_permission_CHANGE_NETWORK_STATE") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Contour Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=Result,y=com_android_launcher_permission_INSTALL_SHORTCUT )) +
	geom_density2d(stat = "density2d",position = "identity") +
	labs(x="Result",y="com_android_launcher_permission_INSTALL_SHORTCUT", title= "Contour plot  for X axis variable: Result, Y axis variable: com_android_launcher_permission_INSTALL_SHORTCUT") +
	xlab("Result") +
	ylab("com_android_launcher_permission_INSTALL_SHORTCUT") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Contour Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=Result,y=android_permission_android_permission_READ_PHONE_STATE )) +
	geom_density2d(stat = "density2d",position = "identity") +
	labs(x="Result",y="android_permission_android_permission_READ_PHONE_STATE", title= "Contour plot  for X axis variable: Result, Y axis variable: android_permission_android_permission_READ_PHONE_STATE") +
	xlab("Result") +
	ylab("android_permission_android_permission_READ_PHONE_STATE") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Contour Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=Result,y=android_permission_CALL_PHONE )) +
	geom_density2d(stat = "density2d",position = "identity") +
	labs(x="Result",y="android_permission_CALL_PHONE", title= "Contour plot  for X axis variable: Result, Y axis variable: android_permission_CALL_PHONE") +
	xlab("Result") +
	ylab("android_permission_CALL_PHONE") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Contour Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=Result,y=android_permission_WRITE_CONTACTS )) +
	geom_density2d(stat = "density2d",position = "identity") +
	labs(x="Result",y="android_permission_WRITE_CONTACTS", title= "Contour plot  for X axis variable: Result, Y axis variable: android_permission_WRITE_CONTACTS") +
	xlab("Result") +
	ylab("android_permission_WRITE_CONTACTS") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Contour Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=Result,y=android_permission_READ_PHONE_STATE )) +
	geom_density2d(stat = "density2d",position = "identity") +
	labs(x="Result",y="android_permission_READ_PHONE_STATE", title= "Contour plot  for X axis variable: Result, Y axis variable: android_permission_READ_PHONE_STATE") +
	xlab("Result") +
	ylab("android_permission_READ_PHONE_STATE") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Contour Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=Result,y=com_samsung_android_providers_context_permission_WRITE_USE_APP_FEATURE_SURVEY )) +
	geom_density2d(stat = "density2d",position = "identity") +
	labs(x="Result",y="com_samsung_android_providers_context_permission_WRITE_USE_APP_FEATURE_SURVEY", title= "Contour plot  for X axis variable: Result, Y axis variable: com_samsung_android_providers_context_permission_WRITE_USE_APP_FEATURE_SURVEY") +
	xlab("Result") +
	ylab("com_samsung_android_providers_context_permission_WRITE_USE_APP_FEATURE_SURVEY") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Contour Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=Result,y=android_permission_MODIFY_AUDIO_SETTINGS )) +
	geom_density2d(stat = "density2d",position = "identity") +
	labs(x="Result",y="android_permission_MODIFY_AUDIO_SETTINGS", title= "Contour plot  for X axis variable: Result, Y axis variable: android_permission_MODIFY_AUDIO_SETTINGS") +
	xlab("Result") +
	ylab("android_permission_MODIFY_AUDIO_SETTINGS") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Contour Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=Result,y=android_permission_ACCESS_LOCATION_EXTRA_COMMANDS )) +
	geom_density2d(stat = "density2d",position = "identity") +
	labs(x="Result",y="android_permission_ACCESS_LOCATION_EXTRA_COMMANDS", title= "Contour plot  for X axis variable: Result, Y axis variable: android_permission_ACCESS_LOCATION_EXTRA_COMMANDS") +
	xlab("Result") +
	ylab("android_permission_ACCESS_LOCATION_EXTRA_COMMANDS") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Contour Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=Result,y=android_permission_INTERNET )) +
	geom_density2d(stat = "density2d",position = "identity") +
	labs(x="Result",y="android_permission_INTERNET", title= "Contour plot  for X axis variable: Result, Y axis variable: android_permission_INTERNET") +
	xlab("Result") +
	ylab("android_permission_INTERNET") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Contour Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=Result,y=android_permission_MOUNT_UNMOUNT_FILESYSTEMS )) +
	geom_density2d(stat = "density2d",position = "identity") +
	labs(x="Result",y="android_permission_MOUNT_UNMOUNT_FILESYSTEMS", title= "Contour plot  for X axis variable: Result, Y axis variable: android_permission_MOUNT_UNMOUNT_FILESYSTEMS") +
	xlab("Result") +
	ylab("android_permission_MOUNT_UNMOUNT_FILESYSTEMS") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Contour Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=Result,y=com_majeur_launcher_permission_UPDATE_BADGE )) +
	geom_density2d(stat = "density2d",position = "identity") +
	labs(x="Result",y="com_majeur_launcher_permission_UPDATE_BADGE", title= "Contour plot  for X axis variable: Result, Y axis variable: com_majeur_launcher_permission_UPDATE_BADGE") +
	xlab("Result") +
	ylab("com_majeur_launcher_permission_UPDATE_BADGE") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Contour Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=Result,y=android_permission_AUTHENTICATE_ACCOUNTS )) +
	geom_density2d(stat = "density2d",position = "identity") +
	labs(x="Result",y="android_permission_AUTHENTICATE_ACCOUNTS", title= "Contour plot  for X axis variable: Result, Y axis variable: android_permission_AUTHENTICATE_ACCOUNTS") +
	xlab("Result") +
	ylab("android_permission_AUTHENTICATE_ACCOUNTS") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Contour Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=Result,y=com_htc_launcher_permission_READ_SETTINGS )) +
	geom_density2d(stat = "density2d",position = "identity") +
	labs(x="Result",y="com_htc_launcher_permission_READ_SETTINGS", title= "Contour plot  for X axis variable: Result, Y axis variable: com_htc_launcher_permission_READ_SETTINGS") +
	xlab("Result") +
	ylab("com_htc_launcher_permission_READ_SETTINGS") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Contour Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=Result,y=android_permission_ACCESS_WIFI_STATE )) +
	geom_density2d(stat = "density2d",position = "identity") +
	labs(x="Result",y="android_permission_ACCESS_WIFI_STATE", title= "Contour plot  for X axis variable: Result, Y axis variable: android_permission_ACCESS_WIFI_STATE") +
	xlab("Result") +
	ylab("android_permission_ACCESS_WIFI_STATE") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Contour Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=Result,y=android_permission_FLASHLIGHT )) +
	geom_density2d(stat = "density2d",position = "identity") +
	labs(x="Result",y="android_permission_FLASHLIGHT", title= "Contour plot  for X axis variable: Result, Y axis variable: android_permission_FLASHLIGHT") +
	xlab("Result") +
	ylab("android_permission_FLASHLIGHT") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Contour Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=Result,y=android_permission_READ_APP_BADGE )) +
	geom_density2d(stat = "density2d",position = "identity") +
	labs(x="Result",y="android_permission_READ_APP_BADGE", title= "Contour plot  for X axis variable: Result, Y axis variable: android_permission_READ_APP_BADGE") +
	xlab("Result") +
	ylab("android_permission_READ_APP_BADGE") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Contour Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=Result,y=android_permission_USE_CREDENTIALS )) +
	geom_density2d(stat = "density2d",position = "identity") +
	labs(x="Result",y="android_permission_USE_CREDENTIALS", title= "Contour plot  for X axis variable: Result, Y axis variable: android_permission_USE_CREDENTIALS") +
	xlab("Result") +
	ylab("android_permission_USE_CREDENTIALS") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Contour Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=Result,y=android_permission_CHANGE_CONFIGURATION )) +
	geom_density2d(stat = "density2d",position = "identity") +
	labs(x="Result",y="android_permission_CHANGE_CONFIGURATION", title= "Contour plot  for X axis variable: Result, Y axis variable: android_permission_CHANGE_CONFIGURATION") +
	xlab("Result") +
	ylab("android_permission_CHANGE_CONFIGURATION") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Contour Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=Result,y=android_permission_READ_SYNC_SETTINGS )) +
	geom_density2d(stat = "density2d",position = "identity") +
	labs(x="Result",y="android_permission_READ_SYNC_SETTINGS", title= "Contour plot  for X axis variable: Result, Y axis variable: android_permission_READ_SYNC_SETTINGS") +
	xlab("Result") +
	ylab("android_permission_READ_SYNC_SETTINGS") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Contour Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=Result,y=android_permission_BROADCAST_STICKY )) +
	geom_density2d(stat = "density2d",position = "identity") +
	labs(x="Result",y="android_permission_BROADCAST_STICKY", title= "Contour plot  for X axis variable: Result, Y axis variable: android_permission_BROADCAST_STICKY") +
	xlab("Result") +
	ylab("android_permission_BROADCAST_STICKY") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Contour Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=Result,y=com_anddoes_launcher_permission_UPDATE_COUNT )) +
	geom_density2d(stat = "density2d",position = "identity") +
	labs(x="Result",y="com_anddoes_launcher_permission_UPDATE_COUNT", title= "Contour plot  for X axis variable: Result, Y axis variable: com_anddoes_launcher_permission_UPDATE_COUNT") +
	xlab("Result") +
	ylab("com_anddoes_launcher_permission_UPDATE_COUNT") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Contour Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=Result,y=com_android_alarm_permission_SET_ALARM )) +
	geom_density2d(stat = "density2d",position = "identity") +
	labs(x="Result",y="com_android_alarm_permission_SET_ALARM", title= "Contour plot  for X axis variable: Result, Y axis variable: com_android_alarm_permission_SET_ALARM") +
	xlab("Result") +
	ylab("com_android_alarm_permission_SET_ALARM") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Contour Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=Result,y=com_google_android_c2dm_permission_RECEIVE )) +
	geom_density2d(stat = "density2d",position = "identity") +
	labs(x="Result",y="com_google_android_c2dm_permission_RECEIVE", title= "Contour plot  for X axis variable: Result, Y axis variable: com_google_android_c2dm_permission_RECEIVE") +
	xlab("Result") +
	ylab("com_google_android_c2dm_permission_RECEIVE") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Contour Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=Result,y=android_permission_KILL_BACKGROUND_PROCESSES )) +
	geom_density2d(stat = "density2d",position = "identity") +
	labs(x="Result",y="android_permission_KILL_BACKGROUND_PROCESSES", title= "Contour plot  for X axis variable: Result, Y axis variable: android_permission_KILL_BACKGROUND_PROCESSES") +
	xlab("Result") +
	ylab("android_permission_KILL_BACKGROUND_PROCESSES") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Contour Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=Result,y=com_sonymobile_home_permission_PROVIDER_INSERT_BADGE )) +
	geom_density2d(stat = "density2d",position = "identity") +
	labs(x="Result",y="com_sonymobile_home_permission_PROVIDER_INSERT_BADGE", title= "Contour plot  for X axis variable: Result, Y axis variable: com_sonymobile_home_permission_PROVIDER_INSERT_BADGE") +
	xlab("Result") +
	ylab("com_sonymobile_home_permission_PROVIDER_INSERT_BADGE") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Contour Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=Result,y=com_sec_android_provider_badge_permission_READ )) +
	geom_density2d(stat = "density2d",position = "identity") +
	labs(x="Result",y="com_sec_android_provider_badge_permission_READ", title= "Contour plot  for X axis variable: Result, Y axis variable: com_sec_android_provider_badge_permission_READ") +
	xlab("Result") +
	ylab("com_sec_android_provider_badge_permission_READ") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Contour Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=Result,y=android_permission_WRITE_CALENDAR )) +
	geom_density2d(stat = "density2d",position = "identity") +
	labs(x="Result",y="android_permission_WRITE_CALENDAR", title= "Contour plot  for X axis variable: Result, Y axis variable: android_permission_WRITE_CALENDAR") +
	xlab("Result") +
	ylab("android_permission_WRITE_CALENDAR") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Contour Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=Result,y=android_permission_SEND_SMS )) +
	geom_density2d(stat = "density2d",position = "identity") +
	labs(x="Result",y="android_permission_SEND_SMS", title= "Contour plot  for X axis variable: Result, Y axis variable: android_permission_SEND_SMS") +
	xlab("Result") +
	ylab("android_permission_SEND_SMS") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Contour Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=Result,y=com_huawei_android_launcher_permission_WRITE_SETTINGS )) +
	geom_density2d(stat = "density2d",position = "identity") +
	labs(x="Result",y="com_huawei_android_launcher_permission_WRITE_SETTINGS", title= "Contour plot  for X axis variable: Result, Y axis variable: com_huawei_android_launcher_permission_WRITE_SETTINGS") +
	xlab("Result") +
	ylab("com_huawei_android_launcher_permission_WRITE_SETTINGS") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Contour Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=Result,y=android_permission_REQUEST_INSTALL_PACKAGES )) +
	geom_density2d(stat = "density2d",position = "identity") +
	labs(x="Result",y="android_permission_REQUEST_INSTALL_PACKAGES", title= "Contour plot  for X axis variable: Result, Y axis variable: android_permission_REQUEST_INSTALL_PACKAGES") +
	xlab("Result") +
	ylab("android_permission_REQUEST_INSTALL_PACKAGES") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Contour Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=Result,y=android_permission_SET_WALLPAPER_HINTS )) +
	geom_density2d(stat = "density2d",position = "identity") +
	labs(x="Result",y="android_permission_SET_WALLPAPER_HINTS", title= "Contour plot  for X axis variable: Result, Y axis variable: android_permission_SET_WALLPAPER_HINTS") +
	xlab("Result") +
	ylab("android_permission_SET_WALLPAPER_HINTS") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Contour Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=Result,y=android_permission_SET_WALLPAPER )) +
	geom_density2d(stat = "density2d",position = "identity") +
	labs(x="Result",y="android_permission_SET_WALLPAPER", title= "Contour plot  for X axis variable: Result, Y axis variable: android_permission_SET_WALLPAPER") +
	xlab("Result") +
	ylab("android_permission_SET_WALLPAPER") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Contour Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=Result,y=com_oppo_launcher_permission_WRITE_SETTINGS )) +
	geom_density2d(stat = "density2d",position = "identity") +
	labs(x="Result",y="com_oppo_launcher_permission_WRITE_SETTINGS", title= "Contour plot  for X axis variable: Result, Y axis variable: com_oppo_launcher_permission_WRITE_SETTINGS") +
	xlab("Result") +
	ylab("com_oppo_launcher_permission_WRITE_SETTINGS") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Contour Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=Result,y=android_permission_RESTART_PACKAGES )) +
	geom_density2d(stat = "density2d",position = "identity") +
	labs(x="Result",y="android_permission_RESTART_PACKAGES", title= "Contour plot  for X axis variable: Result, Y axis variable: android_permission_RESTART_PACKAGES") +
	xlab("Result") +
	ylab("android_permission_RESTART_PACKAGES") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Contour Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=Result,y=me_everything_badger_permission_BADGE_COUNT_WRITE )) +
	geom_density2d(stat = "density2d",position = "identity") +
	labs(x="Result",y="me_everything_badger_permission_BADGE_COUNT_WRITE", title= "Contour plot  for X axis variable: Result, Y axis variable: me_everything_badger_permission_BADGE_COUNT_WRITE") +
	xlab("Result") +
	ylab("me_everything_badger_permission_BADGE_COUNT_WRITE") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Contour Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=Result,y=android_permission_ACCESS_MOCK_LOCATION )) +
	geom_density2d(stat = "density2d",position = "identity") +
	labs(x="Result",y="android_permission_ACCESS_MOCK_LOCATION", title= "Contour plot  for X axis variable: Result, Y axis variable: android_permission_ACCESS_MOCK_LOCATION") +
	xlab("Result") +
	ylab("android_permission_ACCESS_MOCK_LOCATION") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Contour Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=Result,y=android_permission_ACCESS_COARSE_LOCATION )) +
	geom_density2d(stat = "density2d",position = "identity") +
	labs(x="Result",y="android_permission_ACCESS_COARSE_LOCATION", title= "Contour plot  for X axis variable: Result, Y axis variable: android_permission_ACCESS_COARSE_LOCATION") +
	xlab("Result") +
	ylab("android_permission_ACCESS_COARSE_LOCATION") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Contour Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=Result,y=android_permission_READ_LOGS )) +
	geom_density2d(stat = "density2d",position = "identity") +
	labs(x="Result",y="android_permission_READ_LOGS", title= "Contour plot  for X axis variable: Result, Y axis variable: android_permission_READ_LOGS") +
	xlab("Result") +
	ylab("android_permission_READ_LOGS") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Contour Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=Result,y=com_google_android_gms_permission_ACTIVITY_RECOGNITION )) +
	geom_density2d(stat = "density2d",position = "identity") +
	labs(x="Result",y="com_google_android_gms_permission_ACTIVITY_RECOGNITION", title= "Contour plot  for X axis variable: Result, Y axis variable: com_google_android_gms_permission_ACTIVITY_RECOGNITION") +
	xlab("Result") +
	ylab("com_google_android_gms_permission_ACTIVITY_RECOGNITION") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Contour Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=Result,y=com_amazon_device_messaging_permission_RECEIVE )) +
	geom_density2d(stat = "density2d",position = "identity") +
	labs(x="Result",y="com_amazon_device_messaging_permission_RECEIVE", title= "Contour plot  for X axis variable: Result, Y axis variable: com_amazon_device_messaging_permission_RECEIVE") +
	xlab("Result") +
	ylab("com_amazon_device_messaging_permission_RECEIVE") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Contour Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=Result,y=android_permission_SYSTEM_ALERT_WINDOW )) +
	geom_density2d(stat = "density2d",position = "identity") +
	labs(x="Result",y="android_permission_SYSTEM_ALERT_WINDOW", title= "Contour plot  for X axis variable: Result, Y axis variable: android_permission_SYSTEM_ALERT_WINDOW") +
	xlab("Result") +
	ylab("android_permission_SYSTEM_ALERT_WINDOW") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Contour Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=Result,y=android_permission_DISABLE_KEYGUARD )) +
	geom_density2d(stat = "density2d",position = "identity") +
	labs(x="Result",y="android_permission_DISABLE_KEYGUARD", title= "Contour plot  for X axis variable: Result, Y axis variable: android_permission_DISABLE_KEYGUARD") +
	xlab("Result") +
	ylab("android_permission_DISABLE_KEYGUARD") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Contour Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=Result,y=android_permission_USE_FINGERPRINT )) +
	geom_density2d(stat = "density2d",position = "identity") +
	labs(x="Result",y="android_permission_USE_FINGERPRINT", title= "Contour plot  for X axis variable: Result, Y axis variable: android_permission_USE_FINGERPRINT") +
	xlab("Result") +
	ylab("android_permission_USE_FINGERPRINT") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Contour Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=Result,y=me_everything_badger_permission_BADGE_COUNT_READ )) +
	geom_density2d(stat = "density2d",position = "identity") +
	labs(x="Result",y="me_everything_badger_permission_BADGE_COUNT_READ", title= "Contour plot  for X axis variable: Result, Y axis variable: me_everything_badger_permission_BADGE_COUNT_READ") +
	xlab("Result") +
	ylab("me_everything_badger_permission_BADGE_COUNT_READ") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Contour Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=Result,y=android_permission_CHANGE_WIFI_STATE )) +
	geom_density2d(stat = "density2d",position = "identity") +
	labs(x="Result",y="android_permission_CHANGE_WIFI_STATE", title= "Contour plot  for X axis variable: Result, Y axis variable: android_permission_CHANGE_WIFI_STATE") +
	xlab("Result") +
	ylab("android_permission_CHANGE_WIFI_STATE") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Contour Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=Result,y=android_permission_READ_CONTACTS )) +
	geom_density2d(stat = "density2d",position = "identity") +
	labs(x="Result",y="android_permission_READ_CONTACTS", title= "Contour plot  for X axis variable: Result, Y axis variable: android_permission_READ_CONTACTS") +
	xlab("Result") +
	ylab("android_permission_READ_CONTACTS") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Contour Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=Result,y=com_android_vending_BILLING )) +
	geom_density2d(stat = "density2d",position = "identity") +
	labs(x="Result",y="com_android_vending_BILLING", title= "Contour plot  for X axis variable: Result, Y axis variable: com_android_vending_BILLING") +
	xlab("Result") +
	ylab("com_android_vending_BILLING") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Contour Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=Result,y=android_permission_READ_CALENDAR )) +
	geom_density2d(stat = "density2d",position = "identity") +
	labs(x="Result",y="android_permission_READ_CALENDAR", title= "Contour plot  for X axis variable: Result, Y axis variable: android_permission_READ_CALENDAR") +
	xlab("Result") +
	ylab("android_permission_READ_CALENDAR") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Contour Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=Result,y=android_permission_RECEIVE_BOOT_COMPLETED )) +
	geom_density2d(stat = "density2d",position = "identity") +
	labs(x="Result",y="android_permission_RECEIVE_BOOT_COMPLETED", title= "Contour plot  for X axis variable: Result, Y axis variable: android_permission_RECEIVE_BOOT_COMPLETED") +
	xlab("Result") +
	ylab("android_permission_RECEIVE_BOOT_COMPLETED") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Contour Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=Result,y=android_permission_WAKE_LOCK )) +
	geom_density2d(stat = "density2d",position = "identity") +
	labs(x="Result",y="android_permission_WAKE_LOCK", title= "Contour plot  for X axis variable: Result, Y axis variable: android_permission_WAKE_LOCK") +
	xlab("Result") +
	ylab("android_permission_WAKE_LOCK") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Contour Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=Result,y=android_permission_ACCESS_FINE_LOCATION )) +
	geom_density2d(stat = "density2d",position = "identity") +
	labs(x="Result",y="android_permission_ACCESS_FINE_LOCATION", title= "Contour plot  for X axis variable: Result, Y axis variable: android_permission_ACCESS_FINE_LOCATION") +
	xlab("Result") +
	ylab("android_permission_ACCESS_FINE_LOCATION") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Contour Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=Result,y=android_permission_BLUETOOTH )) +
	geom_density2d(stat = "density2d",position = "identity") +
	labs(x="Result",y="android_permission_BLUETOOTH", title= "Contour plot  for X axis variable: Result, Y axis variable: android_permission_BLUETOOTH") +
	xlab("Result") +
	ylab("android_permission_BLUETOOTH") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Contour Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=Result,y=android_permission_CAMERA )) +
	geom_density2d(stat = "density2d",position = "identity") +
	labs(x="Result",y="android_permission_CAMERA", title= "Contour plot  for X axis variable: Result, Y axis variable: android_permission_CAMERA") +
	xlab("Result") +
	ylab("android_permission_CAMERA") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Contour Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=Result,y=com_android_vending_CHECK_LICENSE )) +
	geom_density2d(stat = "density2d",position = "identity") +
	labs(x="Result",y="com_android_vending_CHECK_LICENSE", title= "Contour plot  for X axis variable: Result, Y axis variable: com_android_vending_CHECK_LICENSE") +
	xlab("Result") +
	ylab("com_android_vending_CHECK_LICENSE") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Contour Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=Result,y=android_permission_FOREGROUND_SERVICE )) +
	geom_density2d(stat = "density2d",position = "identity") +
	labs(x="Result",y="android_permission_FOREGROUND_SERVICE", title= "Contour plot  for X axis variable: Result, Y axis variable: android_permission_FOREGROUND_SERVICE") +
	xlab("Result") +
	ylab("android_permission_FOREGROUND_SERVICE") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Contour Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=Result,y=android_permission_BLUETOOTH_ADMIN )) +
	geom_density2d(stat = "density2d",position = "identity") +
	labs(x="Result",y="android_permission_BLUETOOTH_ADMIN", title= "Contour plot  for X axis variable: Result, Y axis variable: android_permission_BLUETOOTH_ADMIN") +
	xlab("Result") +
	ylab("android_permission_BLUETOOTH_ADMIN") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Contour Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=Result,y=android_permission_VIBRATE )) +
	geom_density2d(stat = "density2d",position = "identity") +
	labs(x="Result",y="android_permission_VIBRATE", title= "Contour plot  for X axis variable: Result, Y axis variable: android_permission_VIBRATE") +
	xlab("Result") +
	ylab("android_permission_VIBRATE") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Contour Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=Result,y=android_permission_NFC )) +
	geom_density2d(stat = "density2d",position = "identity") +
	labs(x="Result",y="android_permission_NFC", title= "Contour plot  for X axis variable: Result, Y axis variable: android_permission_NFC") +
	xlab("Result") +
	ylab("android_permission_NFC") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Contour Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=Result,y=android_permission_RECEIVE_USER_PRESENT )) +
	geom_density2d(stat = "density2d",position = "identity") +
	labs(x="Result",y="android_permission_RECEIVE_USER_PRESENT", title= "Contour plot  for X axis variable: Result, Y axis variable: android_permission_RECEIVE_USER_PRESENT") +
	xlab("Result") +
	ylab("android_permission_RECEIVE_USER_PRESENT") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Contour Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=Result,y=android_permission_CLEAR_APP_CACHE )) +
	geom_density2d(stat = "density2d",position = "identity") +
	labs(x="Result",y="android_permission_CLEAR_APP_CACHE", title= "Contour plot  for X axis variable: Result, Y axis variable: android_permission_CLEAR_APP_CACHE") +
	xlab("Result") +
	ylab("android_permission_CLEAR_APP_CACHE") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Contour Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=Result,y=com_android_launcher_permission_UNINSTALL_SHORTCUT )) +
	geom_density2d(stat = "density2d",position = "identity") +
	labs(x="Result",y="com_android_launcher_permission_UNINSTALL_SHORTCUT", title= "Contour plot  for X axis variable: Result, Y axis variable: com_android_launcher_permission_UNINSTALL_SHORTCUT") +
	xlab("Result") +
	ylab("com_android_launcher_permission_UNINSTALL_SHORTCUT") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Contour Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=Result,y=com_sec_android_iap_permission_BILLING )) +
	geom_density2d(stat = "density2d",position = "identity") +
	labs(x="Result",y="com_sec_android_iap_permission_BILLING", title= "Contour plot  for X axis variable: Result, Y axis variable: com_sec_android_iap_permission_BILLING") +
	xlab("Result") +
	ylab("com_sec_android_iap_permission_BILLING") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Contour Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=Result,y=com_htc_launcher_permission_UPDATE_SHORTCUT )) +
	geom_density2d(stat = "density2d",position = "identity") +
	labs(x="Result",y="com_htc_launcher_permission_UPDATE_SHORTCUT", title= "Contour plot  for X axis variable: Result, Y axis variable: com_htc_launcher_permission_UPDATE_SHORTCUT") +
	xlab("Result") +
	ylab("com_htc_launcher_permission_UPDATE_SHORTCUT") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Contour Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=Result,y=com_sec_android_provider_badge_permission_WRITE )) +
	geom_density2d(stat = "density2d",position = "identity") +
	labs(x="Result",y="com_sec_android_provider_badge_permission_WRITE", title= "Contour plot  for X axis variable: Result, Y axis variable: com_sec_android_provider_badge_permission_WRITE") +
	xlab("Result") +
	ylab("com_sec_android_provider_badge_permission_WRITE") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Contour Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=Result,y=android_permission_ACCESS_NETWORK_STATE )) +
	geom_density2d(stat = "density2d",position = "identity") +
	labs(x="Result",y="android_permission_ACCESS_NETWORK_STATE", title= "Contour plot  for X axis variable: Result, Y axis variable: android_permission_ACCESS_NETWORK_STATE") +
	xlab("Result") +
	ylab("android_permission_ACCESS_NETWORK_STATE") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Contour Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=Result,y=com_google_android_finsky_permission_BIND_GET_INSTALL_REFERRER_SERVICE )) +
	geom_density2d(stat = "density2d",position = "identity") +
	labs(x="Result",y="com_google_android_finsky_permission_BIND_GET_INSTALL_REFERRER_SERVICE", title= "Contour plot  for X axis variable: Result, Y axis variable: com_google_android_finsky_permission_BIND_GET_INSTALL_REFERRER_SERVICE") +
	xlab("Result") +
	ylab("com_google_android_finsky_permission_BIND_GET_INSTALL_REFERRER_SERVICE") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Contour Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=Result,y=com_huawei_android_launcher_permission_READ_SETTINGS )) +
	geom_density2d(stat = "density2d",position = "identity") +
	labs(x="Result",y="com_huawei_android_launcher_permission_READ_SETTINGS", title= "Contour plot  for X axis variable: Result, Y axis variable: com_huawei_android_launcher_permission_READ_SETTINGS") +
	xlab("Result") +
	ylab("com_huawei_android_launcher_permission_READ_SETTINGS") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Contour Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=Result,y=android_permission_READ_SMS )) +
	geom_density2d(stat = "density2d",position = "identity") +
	labs(x="Result",y="android_permission_READ_SMS", title= "Contour plot  for X axis variable: Result, Y axis variable: android_permission_READ_SMS") +
	xlab("Result") +
	ylab("android_permission_READ_SMS") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Contour Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=Result,y=android_permission_PROCESS_INCOMING_CALLS )) +
	geom_density2d(stat = "density2d",position = "identity") +
	labs(x="Result",y="android_permission_PROCESS_INCOMING_CALLS", title= "Contour plot  for X axis variable: Result, Y axis variable: android_permission_PROCESS_INCOMING_CALLS") +
	xlab("Result") +
	ylab("android_permission_PROCESS_INCOMING_CALLS") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```
# Frequency Chart

```{r}
## [Frequency Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_GET_ACCOUNTS  )) +
	geom_freqpoly(stat = "Count",alpha=1,) +
	labs(x="android_permission_GET_ACCOUNTS",y ="Counts" , title= "Frequency chart for variable android_permission_GET_ACCOUNTS ") +
	xlab("android_permission_GET_ACCOUNTS") + 
	ylab("Counts") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Frequency Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=com_sonyericsson_home_permission_BROADCAST_BADGE  )) +
	geom_freqpoly(stat = "Count",alpha=1,) +
	labs(x="com_sonyericsson_home_permission_BROADCAST_BADGE",y ="Counts" , title= "Frequency chart for variable com_sonyericsson_home_permission_BROADCAST_BADGE ") +
	xlab("com_sonyericsson_home_permission_BROADCAST_BADGE") + 
	ylab("Counts") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Frequency Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_READ_PROFILE  )) +
	geom_freqpoly(stat = "Count",alpha=1,) +
	labs(x="android_permission_READ_PROFILE",y ="Counts" , title= "Frequency chart for variable android_permission_READ_PROFILE ") +
	xlab("android_permission_READ_PROFILE") + 
	ylab("Counts") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Frequency Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_MANAGE_ACCOUNTS  )) +
	geom_freqpoly(stat = "Count",alpha=1,) +
	labs(x="android_permission_MANAGE_ACCOUNTS",y ="Counts" , title= "Frequency chart for variable android_permission_MANAGE_ACCOUNTS ") +
	xlab("android_permission_MANAGE_ACCOUNTS") + 
	ylab("Counts") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Frequency Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_WRITE_SYNC_SETTINGS  )) +
	geom_freqpoly(stat = "Count",alpha=1,) +
	labs(x="android_permission_WRITE_SYNC_SETTINGS",y ="Counts" , title= "Frequency chart for variable android_permission_WRITE_SYNC_SETTINGS ") +
	xlab("android_permission_WRITE_SYNC_SETTINGS") + 
	ylab("Counts") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Frequency Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_READ_EXTERNAL_STORAGE  )) +
	geom_freqpoly(stat = "Count",alpha=1,) +
	labs(x="android_permission_READ_EXTERNAL_STORAGE",y ="Counts" , title= "Frequency chart for variable android_permission_READ_EXTERNAL_STORAGE ") +
	xlab("android_permission_READ_EXTERNAL_STORAGE") + 
	ylab("Counts") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Frequency Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_RECEIVE_SMS  )) +
	geom_freqpoly(stat = "Count",alpha=1,) +
	labs(x="android_permission_RECEIVE_SMS",y ="Counts" , title= "Frequency chart for variable android_permission_RECEIVE_SMS ") +
	xlab("android_permission_RECEIVE_SMS") + 
	ylab("Counts") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Frequency Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=com_android_launcher_permission_READ_SETTINGS  )) +
	geom_freqpoly(stat = "Count",alpha=1,) +
	labs(x="com_android_launcher_permission_READ_SETTINGS",y ="Counts" , title= "Frequency chart for variable com_android_launcher_permission_READ_SETTINGS ") +
	xlab("com_android_launcher_permission_READ_SETTINGS") + 
	ylab("Counts") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Frequency Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_WRITE_SETTINGS  )) +
	geom_freqpoly(stat = "Count",alpha=1,) +
	labs(x="android_permission_WRITE_SETTINGS",y ="Counts" , title= "Frequency chart for variable android_permission_WRITE_SETTINGS ") +
	xlab("android_permission_WRITE_SETTINGS") + 
	ylab("Counts") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Frequency Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=com_google_android_providers_gsf_permission_READ_GSERVICES  )) +
	geom_freqpoly(stat = "Count",alpha=1,) +
	labs(x="com_google_android_providers_gsf_permission_READ_GSERVICES",y ="Counts" , title= "Frequency chart for variable com_google_android_providers_gsf_permission_READ_GSERVICES ") +
	xlab("com_google_android_providers_gsf_permission_READ_GSERVICES") + 
	ylab("Counts") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Frequency Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_DOWNLOAD_WITHOUT_NOTIFICATION  )) +
	geom_freqpoly(stat = "Count",alpha=1,) +
	labs(x="android_permission_DOWNLOAD_WITHOUT_NOTIFICATION",y ="Counts" , title= "Frequency chart for variable android_permission_DOWNLOAD_WITHOUT_NOTIFICATION ") +
	xlab("android_permission_DOWNLOAD_WITHOUT_NOTIFICATION") + 
	ylab("Counts") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Frequency Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_GET_TASKS  )) +
	geom_freqpoly(stat = "Count",alpha=1,) +
	labs(x="android_permission_GET_TASKS",y ="Counts" , title= "Frequency chart for variable android_permission_GET_TASKS ") +
	xlab("android_permission_GET_TASKS") + 
	ylab("Counts") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Frequency Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_WRITE_EXTERNAL_STORAGE  )) +
	geom_freqpoly(stat = "Count",alpha=1,) +
	labs(x="android_permission_WRITE_EXTERNAL_STORAGE",y ="Counts" , title= "Frequency chart for variable android_permission_WRITE_EXTERNAL_STORAGE ") +
	xlab("android_permission_WRITE_EXTERNAL_STORAGE") + 
	ylab("Counts") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Frequency Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_RECORD_AUDIO  )) +
	geom_freqpoly(stat = "Count",alpha=1,) +
	labs(x="android_permission_RECORD_AUDIO",y ="Counts" , title= "Frequency chart for variable android_permission_RECORD_AUDIO ") +
	xlab("android_permission_RECORD_AUDIO") + 
	ylab("Counts") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Frequency Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=com_huawei_android_launcher_permission_CHANGE_BADGE  )) +
	geom_freqpoly(stat = "Count",alpha=1,) +
	labs(x="com_huawei_android_launcher_permission_CHANGE_BADGE",y ="Counts" , title= "Frequency chart for variable com_huawei_android_launcher_permission_CHANGE_BADGE ") +
	xlab("com_huawei_android_launcher_permission_CHANGE_BADGE") + 
	ylab("Counts") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Frequency Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=com_oppo_launcher_permission_READ_SETTINGS  )) +
	geom_freqpoly(stat = "Count",alpha=1,) +
	labs(x="com_oppo_launcher_permission_READ_SETTINGS",y ="Counts" , title= "Frequency chart for variable com_oppo_launcher_permission_READ_SETTINGS ") +
	xlab("com_oppo_launcher_permission_READ_SETTINGS") + 
	ylab("Counts") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Frequency Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_CHANGE_NETWORK_STATE  )) +
	geom_freqpoly(stat = "Count",alpha=1,) +
	labs(x="android_permission_CHANGE_NETWORK_STATE",y ="Counts" , title= "Frequency chart for variable android_permission_CHANGE_NETWORK_STATE ") +
	xlab("android_permission_CHANGE_NETWORK_STATE") + 
	ylab("Counts") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Frequency Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=com_android_launcher_permission_INSTALL_SHORTCUT  )) +
	geom_freqpoly(stat = "Count",alpha=1,) +
	labs(x="com_android_launcher_permission_INSTALL_SHORTCUT",y ="Counts" , title= "Frequency chart for variable com_android_launcher_permission_INSTALL_SHORTCUT ") +
	xlab("com_android_launcher_permission_INSTALL_SHORTCUT") + 
	ylab("Counts") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Frequency Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_android_permission_READ_PHONE_STATE  )) +
	geom_freqpoly(stat = "Count",alpha=1,) +
	labs(x="android_permission_android_permission_READ_PHONE_STATE",y ="Counts" , title= "Frequency chart for variable android_permission_android_permission_READ_PHONE_STATE ") +
	xlab("android_permission_android_permission_READ_PHONE_STATE") + 
	ylab("Counts") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Frequency Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_CALL_PHONE  )) +
	geom_freqpoly(stat = "Count",alpha=1,) +
	labs(x="android_permission_CALL_PHONE",y ="Counts" , title= "Frequency chart for variable android_permission_CALL_PHONE ") +
	xlab("android_permission_CALL_PHONE") + 
	ylab("Counts") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Frequency Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_WRITE_CONTACTS  )) +
	geom_freqpoly(stat = "Count",alpha=1,) +
	labs(x="android_permission_WRITE_CONTACTS",y ="Counts" , title= "Frequency chart for variable android_permission_WRITE_CONTACTS ") +
	xlab("android_permission_WRITE_CONTACTS") + 
	ylab("Counts") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Frequency Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_READ_PHONE_STATE  )) +
	geom_freqpoly(stat = "Count",alpha=1,) +
	labs(x="android_permission_READ_PHONE_STATE",y ="Counts" , title= "Frequency chart for variable android_permission_READ_PHONE_STATE ") +
	xlab("android_permission_READ_PHONE_STATE") + 
	ylab("Counts") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Frequency Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=com_samsung_android_providers_context_permission_WRITE_USE_APP_FEATURE_SURVEY  )) +
	geom_freqpoly(stat = "Count",alpha=1,) +
	labs(x="com_samsung_android_providers_context_permission_WRITE_USE_APP_FEATURE_SURVEY",y ="Counts" , title= "Frequency chart for variable com_samsung_android_providers_context_permission_WRITE_USE_APP_FEATURE_SURVEY ") +
	xlab("com_samsung_android_providers_context_permission_WRITE_USE_APP_FEATURE_SURVEY") + 
	ylab("Counts") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Frequency Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_MODIFY_AUDIO_SETTINGS  )) +
	geom_freqpoly(stat = "Count",alpha=1,) +
	labs(x="android_permission_MODIFY_AUDIO_SETTINGS",y ="Counts" , title= "Frequency chart for variable android_permission_MODIFY_AUDIO_SETTINGS ") +
	xlab("android_permission_MODIFY_AUDIO_SETTINGS") + 
	ylab("Counts") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Frequency Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_ACCESS_LOCATION_EXTRA_COMMANDS  )) +
	geom_freqpoly(stat = "Count",alpha=1,) +
	labs(x="android_permission_ACCESS_LOCATION_EXTRA_COMMANDS",y ="Counts" , title= "Frequency chart for variable android_permission_ACCESS_LOCATION_EXTRA_COMMANDS ") +
	xlab("android_permission_ACCESS_LOCATION_EXTRA_COMMANDS") + 
	ylab("Counts") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Frequency Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_INTERNET  )) +
	geom_freqpoly(stat = "Count",alpha=1,) +
	labs(x="android_permission_INTERNET",y ="Counts" , title= "Frequency chart for variable android_permission_INTERNET ") +
	xlab("android_permission_INTERNET") + 
	ylab("Counts") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Frequency Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_MOUNT_UNMOUNT_FILESYSTEMS  )) +
	geom_freqpoly(stat = "Count",alpha=1,) +
	labs(x="android_permission_MOUNT_UNMOUNT_FILESYSTEMS",y ="Counts" , title= "Frequency chart for variable android_permission_MOUNT_UNMOUNT_FILESYSTEMS ") +
	xlab("android_permission_MOUNT_UNMOUNT_FILESYSTEMS") + 
	ylab("Counts") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Frequency Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=com_majeur_launcher_permission_UPDATE_BADGE  )) +
	geom_freqpoly(stat = "Count",alpha=1,) +
	labs(x="com_majeur_launcher_permission_UPDATE_BADGE",y ="Counts" , title= "Frequency chart for variable com_majeur_launcher_permission_UPDATE_BADGE ") +
	xlab("com_majeur_launcher_permission_UPDATE_BADGE") + 
	ylab("Counts") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Frequency Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_AUTHENTICATE_ACCOUNTS  )) +
	geom_freqpoly(stat = "Count",alpha=1,) +
	labs(x="android_permission_AUTHENTICATE_ACCOUNTS",y ="Counts" , title= "Frequency chart for variable android_permission_AUTHENTICATE_ACCOUNTS ") +
	xlab("android_permission_AUTHENTICATE_ACCOUNTS") + 
	ylab("Counts") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Frequency Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=com_htc_launcher_permission_READ_SETTINGS  )) +
	geom_freqpoly(stat = "Count",alpha=1,) +
	labs(x="com_htc_launcher_permission_READ_SETTINGS",y ="Counts" , title= "Frequency chart for variable com_htc_launcher_permission_READ_SETTINGS ") +
	xlab("com_htc_launcher_permission_READ_SETTINGS") + 
	ylab("Counts") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Frequency Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_ACCESS_WIFI_STATE  )) +
	geom_freqpoly(stat = "Count",alpha=1,) +
	labs(x="android_permission_ACCESS_WIFI_STATE",y ="Counts" , title= "Frequency chart for variable android_permission_ACCESS_WIFI_STATE ") +
	xlab("android_permission_ACCESS_WIFI_STATE") + 
	ylab("Counts") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Frequency Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_FLASHLIGHT  )) +
	geom_freqpoly(stat = "Count",alpha=1,) +
	labs(x="android_permission_FLASHLIGHT",y ="Counts" , title= "Frequency chart for variable android_permission_FLASHLIGHT ") +
	xlab("android_permission_FLASHLIGHT") + 
	ylab("Counts") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Frequency Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_READ_APP_BADGE  )) +
	geom_freqpoly(stat = "Count",alpha=1,) +
	labs(x="android_permission_READ_APP_BADGE",y ="Counts" , title= "Frequency chart for variable android_permission_READ_APP_BADGE ") +
	xlab("android_permission_READ_APP_BADGE") + 
	ylab("Counts") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Frequency Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_USE_CREDENTIALS  )) +
	geom_freqpoly(stat = "Count",alpha=1,) +
	labs(x="android_permission_USE_CREDENTIALS",y ="Counts" , title= "Frequency chart for variable android_permission_USE_CREDENTIALS ") +
	xlab("android_permission_USE_CREDENTIALS") + 
	ylab("Counts") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Frequency Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_CHANGE_CONFIGURATION  )) +
	geom_freqpoly(stat = "Count",alpha=1,) +
	labs(x="android_permission_CHANGE_CONFIGURATION",y ="Counts" , title= "Frequency chart for variable android_permission_CHANGE_CONFIGURATION ") +
	xlab("android_permission_CHANGE_CONFIGURATION") + 
	ylab("Counts") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Frequency Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_READ_SYNC_SETTINGS  )) +
	geom_freqpoly(stat = "Count",alpha=1,) +
	labs(x="android_permission_READ_SYNC_SETTINGS",y ="Counts" , title= "Frequency chart for variable android_permission_READ_SYNC_SETTINGS ") +
	xlab("android_permission_READ_SYNC_SETTINGS") + 
	ylab("Counts") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Frequency Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_BROADCAST_STICKY  )) +
	geom_freqpoly(stat = "Count",alpha=1,) +
	labs(x="android_permission_BROADCAST_STICKY",y ="Counts" , title= "Frequency chart for variable android_permission_BROADCAST_STICKY ") +
	xlab("android_permission_BROADCAST_STICKY") + 
	ylab("Counts") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Frequency Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=com_anddoes_launcher_permission_UPDATE_COUNT  )) +
	geom_freqpoly(stat = "Count",alpha=1,) +
	labs(x="com_anddoes_launcher_permission_UPDATE_COUNT",y ="Counts" , title= "Frequency chart for variable com_anddoes_launcher_permission_UPDATE_COUNT ") +
	xlab("com_anddoes_launcher_permission_UPDATE_COUNT") + 
	ylab("Counts") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Frequency Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=com_android_alarm_permission_SET_ALARM  )) +
	geom_freqpoly(stat = "Count",alpha=1,) +
	labs(x="com_android_alarm_permission_SET_ALARM",y ="Counts" , title= "Frequency chart for variable com_android_alarm_permission_SET_ALARM ") +
	xlab("com_android_alarm_permission_SET_ALARM") + 
	ylab("Counts") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Frequency Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=com_google_android_c2dm_permission_RECEIVE  )) +
	geom_freqpoly(stat = "Count",alpha=1,) +
	labs(x="com_google_android_c2dm_permission_RECEIVE",y ="Counts" , title= "Frequency chart for variable com_google_android_c2dm_permission_RECEIVE ") +
	xlab("com_google_android_c2dm_permission_RECEIVE") + 
	ylab("Counts") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Frequency Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_KILL_BACKGROUND_PROCESSES  )) +
	geom_freqpoly(stat = "Count",alpha=1,) +
	labs(x="android_permission_KILL_BACKGROUND_PROCESSES",y ="Counts" , title= "Frequency chart for variable android_permission_KILL_BACKGROUND_PROCESSES ") +
	xlab("android_permission_KILL_BACKGROUND_PROCESSES") + 
	ylab("Counts") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Frequency Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=com_sonymobile_home_permission_PROVIDER_INSERT_BADGE  )) +
	geom_freqpoly(stat = "Count",alpha=1,) +
	labs(x="com_sonymobile_home_permission_PROVIDER_INSERT_BADGE",y ="Counts" , title= "Frequency chart for variable com_sonymobile_home_permission_PROVIDER_INSERT_BADGE ") +
	xlab("com_sonymobile_home_permission_PROVIDER_INSERT_BADGE") + 
	ylab("Counts") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Frequency Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=com_sec_android_provider_badge_permission_READ  )) +
	geom_freqpoly(stat = "Count",alpha=1,) +
	labs(x="com_sec_android_provider_badge_permission_READ",y ="Counts" , title= "Frequency chart for variable com_sec_android_provider_badge_permission_READ ") +
	xlab("com_sec_android_provider_badge_permission_READ") + 
	ylab("Counts") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Frequency Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_WRITE_CALENDAR  )) +
	geom_freqpoly(stat = "Count",alpha=1,) +
	labs(x="android_permission_WRITE_CALENDAR",y ="Counts" , title= "Frequency chart for variable android_permission_WRITE_CALENDAR ") +
	xlab("android_permission_WRITE_CALENDAR") + 
	ylab("Counts") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Frequency Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_SEND_SMS  )) +
	geom_freqpoly(stat = "Count",alpha=1,) +
	labs(x="android_permission_SEND_SMS",y ="Counts" , title= "Frequency chart for variable android_permission_SEND_SMS ") +
	xlab("android_permission_SEND_SMS") + 
	ylab("Counts") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Frequency Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=com_huawei_android_launcher_permission_WRITE_SETTINGS  )) +
	geom_freqpoly(stat = "Count",alpha=1,) +
	labs(x="com_huawei_android_launcher_permission_WRITE_SETTINGS",y ="Counts" , title= "Frequency chart for variable com_huawei_android_launcher_permission_WRITE_SETTINGS ") +
	xlab("com_huawei_android_launcher_permission_WRITE_SETTINGS") + 
	ylab("Counts") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Frequency Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_REQUEST_INSTALL_PACKAGES  )) +
	geom_freqpoly(stat = "Count",alpha=1,) +
	labs(x="android_permission_REQUEST_INSTALL_PACKAGES",y ="Counts" , title= "Frequency chart for variable android_permission_REQUEST_INSTALL_PACKAGES ") +
	xlab("android_permission_REQUEST_INSTALL_PACKAGES") + 
	ylab("Counts") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Frequency Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_SET_WALLPAPER_HINTS  )) +
	geom_freqpoly(stat = "Count",alpha=1,) +
	labs(x="android_permission_SET_WALLPAPER_HINTS",y ="Counts" , title= "Frequency chart for variable android_permission_SET_WALLPAPER_HINTS ") +
	xlab("android_permission_SET_WALLPAPER_HINTS") + 
	ylab("Counts") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Frequency Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_SET_WALLPAPER  )) +
	geom_freqpoly(stat = "Count",alpha=1,) +
	labs(x="android_permission_SET_WALLPAPER",y ="Counts" , title= "Frequency chart for variable android_permission_SET_WALLPAPER ") +
	xlab("android_permission_SET_WALLPAPER") + 
	ylab("Counts") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Frequency Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=com_oppo_launcher_permission_WRITE_SETTINGS  )) +
	geom_freqpoly(stat = "Count",alpha=1,) +
	labs(x="com_oppo_launcher_permission_WRITE_SETTINGS",y ="Counts" , title= "Frequency chart for variable com_oppo_launcher_permission_WRITE_SETTINGS ") +
	xlab("com_oppo_launcher_permission_WRITE_SETTINGS") + 
	ylab("Counts") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Frequency Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_RESTART_PACKAGES  )) +
	geom_freqpoly(stat = "Count",alpha=1,) +
	labs(x="android_permission_RESTART_PACKAGES",y ="Counts" , title= "Frequency chart for variable android_permission_RESTART_PACKAGES ") +
	xlab("android_permission_RESTART_PACKAGES") + 
	ylab("Counts") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Frequency Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=me_everything_badger_permission_BADGE_COUNT_WRITE  )) +
	geom_freqpoly(stat = "Count",alpha=1,) +
	labs(x="me_everything_badger_permission_BADGE_COUNT_WRITE",y ="Counts" , title= "Frequency chart for variable me_everything_badger_permission_BADGE_COUNT_WRITE ") +
	xlab("me_everything_badger_permission_BADGE_COUNT_WRITE") + 
	ylab("Counts") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Frequency Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_ACCESS_MOCK_LOCATION  )) +
	geom_freqpoly(stat = "Count",alpha=1,) +
	labs(x="android_permission_ACCESS_MOCK_LOCATION",y ="Counts" , title= "Frequency chart for variable android_permission_ACCESS_MOCK_LOCATION ") +
	xlab("android_permission_ACCESS_MOCK_LOCATION") + 
	ylab("Counts") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Frequency Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_ACCESS_COARSE_LOCATION  )) +
	geom_freqpoly(stat = "Count",alpha=1,) +
	labs(x="android_permission_ACCESS_COARSE_LOCATION",y ="Counts" , title= "Frequency chart for variable android_permission_ACCESS_COARSE_LOCATION ") +
	xlab("android_permission_ACCESS_COARSE_LOCATION") + 
	ylab("Counts") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Frequency Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_READ_LOGS  )) +
	geom_freqpoly(stat = "Count",alpha=1,) +
	labs(x="android_permission_READ_LOGS",y ="Counts" , title= "Frequency chart for variable android_permission_READ_LOGS ") +
	xlab("android_permission_READ_LOGS") + 
	ylab("Counts") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Frequency Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=com_google_android_gms_permission_ACTIVITY_RECOGNITION  )) +
	geom_freqpoly(stat = "Count",alpha=1,) +
	labs(x="com_google_android_gms_permission_ACTIVITY_RECOGNITION",y ="Counts" , title= "Frequency chart for variable com_google_android_gms_permission_ACTIVITY_RECOGNITION ") +
	xlab("com_google_android_gms_permission_ACTIVITY_RECOGNITION") + 
	ylab("Counts") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Frequency Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=com_amazon_device_messaging_permission_RECEIVE  )) +
	geom_freqpoly(stat = "Count",alpha=1,) +
	labs(x="com_amazon_device_messaging_permission_RECEIVE",y ="Counts" , title= "Frequency chart for variable com_amazon_device_messaging_permission_RECEIVE ") +
	xlab("com_amazon_device_messaging_permission_RECEIVE") + 
	ylab("Counts") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Frequency Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_SYSTEM_ALERT_WINDOW  )) +
	geom_freqpoly(stat = "Count",alpha=1,) +
	labs(x="android_permission_SYSTEM_ALERT_WINDOW",y ="Counts" , title= "Frequency chart for variable android_permission_SYSTEM_ALERT_WINDOW ") +
	xlab("android_permission_SYSTEM_ALERT_WINDOW") + 
	ylab("Counts") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Frequency Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_DISABLE_KEYGUARD  )) +
	geom_freqpoly(stat = "Count",alpha=1,) +
	labs(x="android_permission_DISABLE_KEYGUARD",y ="Counts" , title= "Frequency chart for variable android_permission_DISABLE_KEYGUARD ") +
	xlab("android_permission_DISABLE_KEYGUARD") + 
	ylab("Counts") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Frequency Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_USE_FINGERPRINT  )) +
	geom_freqpoly(stat = "Count",alpha=1,) +
	labs(x="android_permission_USE_FINGERPRINT",y ="Counts" , title= "Frequency chart for variable android_permission_USE_FINGERPRINT ") +
	xlab("android_permission_USE_FINGERPRINT") + 
	ylab("Counts") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Frequency Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=me_everything_badger_permission_BADGE_COUNT_READ  )) +
	geom_freqpoly(stat = "Count",alpha=1,) +
	labs(x="me_everything_badger_permission_BADGE_COUNT_READ",y ="Counts" , title= "Frequency chart for variable me_everything_badger_permission_BADGE_COUNT_READ ") +
	xlab("me_everything_badger_permission_BADGE_COUNT_READ") + 
	ylab("Counts") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Frequency Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_CHANGE_WIFI_STATE  )) +
	geom_freqpoly(stat = "Count",alpha=1,) +
	labs(x="android_permission_CHANGE_WIFI_STATE",y ="Counts" , title= "Frequency chart for variable android_permission_CHANGE_WIFI_STATE ") +
	xlab("android_permission_CHANGE_WIFI_STATE") + 
	ylab("Counts") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Frequency Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_READ_CONTACTS  )) +
	geom_freqpoly(stat = "Count",alpha=1,) +
	labs(x="android_permission_READ_CONTACTS",y ="Counts" , title= "Frequency chart for variable android_permission_READ_CONTACTS ") +
	xlab("android_permission_READ_CONTACTS") + 
	ylab("Counts") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Frequency Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=com_android_vending_BILLING  )) +
	geom_freqpoly(stat = "Count",alpha=1,) +
	labs(x="com_android_vending_BILLING",y ="Counts" , title= "Frequency chart for variable com_android_vending_BILLING ") +
	xlab("com_android_vending_BILLING") + 
	ylab("Counts") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Frequency Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_READ_CALENDAR  )) +
	geom_freqpoly(stat = "Count",alpha=1,) +
	labs(x="android_permission_READ_CALENDAR",y ="Counts" , title= "Frequency chart for variable android_permission_READ_CALENDAR ") +
	xlab("android_permission_READ_CALENDAR") + 
	ylab("Counts") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Frequency Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_RECEIVE_BOOT_COMPLETED  )) +
	geom_freqpoly(stat = "Count",alpha=1,) +
	labs(x="android_permission_RECEIVE_BOOT_COMPLETED",y ="Counts" , title= "Frequency chart for variable android_permission_RECEIVE_BOOT_COMPLETED ") +
	xlab("android_permission_RECEIVE_BOOT_COMPLETED") + 
	ylab("Counts") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Frequency Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_WAKE_LOCK  )) +
	geom_freqpoly(stat = "Count",alpha=1,) +
	labs(x="android_permission_WAKE_LOCK",y ="Counts" , title= "Frequency chart for variable android_permission_WAKE_LOCK ") +
	xlab("android_permission_WAKE_LOCK") + 
	ylab("Counts") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Frequency Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_ACCESS_FINE_LOCATION  )) +
	geom_freqpoly(stat = "Count",alpha=1,) +
	labs(x="android_permission_ACCESS_FINE_LOCATION",y ="Counts" , title= "Frequency chart for variable android_permission_ACCESS_FINE_LOCATION ") +
	xlab("android_permission_ACCESS_FINE_LOCATION") + 
	ylab("Counts") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Frequency Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_BLUETOOTH  )) +
	geom_freqpoly(stat = "Count",alpha=1,) +
	labs(x="android_permission_BLUETOOTH",y ="Counts" , title= "Frequency chart for variable android_permission_BLUETOOTH ") +
	xlab("android_permission_BLUETOOTH") + 
	ylab("Counts") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Frequency Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_CAMERA  )) +
	geom_freqpoly(stat = "Count",alpha=1,) +
	labs(x="android_permission_CAMERA",y ="Counts" , title= "Frequency chart for variable android_permission_CAMERA ") +
	xlab("android_permission_CAMERA") + 
	ylab("Counts") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Frequency Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=com_android_vending_CHECK_LICENSE  )) +
	geom_freqpoly(stat = "Count",alpha=1,) +
	labs(x="com_android_vending_CHECK_LICENSE",y ="Counts" , title= "Frequency chart for variable com_android_vending_CHECK_LICENSE ") +
	xlab("com_android_vending_CHECK_LICENSE") + 
	ylab("Counts") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Frequency Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_FOREGROUND_SERVICE  )) +
	geom_freqpoly(stat = "Count",alpha=1,) +
	labs(x="android_permission_FOREGROUND_SERVICE",y ="Counts" , title= "Frequency chart for variable android_permission_FOREGROUND_SERVICE ") +
	xlab("android_permission_FOREGROUND_SERVICE") + 
	ylab("Counts") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Frequency Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_BLUETOOTH_ADMIN  )) +
	geom_freqpoly(stat = "Count",alpha=1,) +
	labs(x="android_permission_BLUETOOTH_ADMIN",y ="Counts" , title= "Frequency chart for variable android_permission_BLUETOOTH_ADMIN ") +
	xlab("android_permission_BLUETOOTH_ADMIN") + 
	ylab("Counts") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Frequency Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_VIBRATE  )) +
	geom_freqpoly(stat = "Count",alpha=1,) +
	labs(x="android_permission_VIBRATE",y ="Counts" , title= "Frequency chart for variable android_permission_VIBRATE ") +
	xlab("android_permission_VIBRATE") + 
	ylab("Counts") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Frequency Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_NFC  )) +
	geom_freqpoly(stat = "Count",alpha=1,) +
	labs(x="android_permission_NFC",y ="Counts" , title= "Frequency chart for variable android_permission_NFC ") +
	xlab("android_permission_NFC") + 
	ylab("Counts") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Frequency Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_RECEIVE_USER_PRESENT  )) +
	geom_freqpoly(stat = "Count",alpha=1,) +
	labs(x="android_permission_RECEIVE_USER_PRESENT",y ="Counts" , title= "Frequency chart for variable android_permission_RECEIVE_USER_PRESENT ") +
	xlab("android_permission_RECEIVE_USER_PRESENT") + 
	ylab("Counts") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Frequency Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_CLEAR_APP_CACHE  )) +
	geom_freqpoly(stat = "Count",alpha=1,) +
	labs(x="android_permission_CLEAR_APP_CACHE",y ="Counts" , title= "Frequency chart for variable android_permission_CLEAR_APP_CACHE ") +
	xlab("android_permission_CLEAR_APP_CACHE") + 
	ylab("Counts") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Frequency Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=com_android_launcher_permission_UNINSTALL_SHORTCUT  )) +
	geom_freqpoly(stat = "Count",alpha=1,) +
	labs(x="com_android_launcher_permission_UNINSTALL_SHORTCUT",y ="Counts" , title= "Frequency chart for variable com_android_launcher_permission_UNINSTALL_SHORTCUT ") +
	xlab("com_android_launcher_permission_UNINSTALL_SHORTCUT") + 
	ylab("Counts") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Frequency Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=com_sec_android_iap_permission_BILLING  )) +
	geom_freqpoly(stat = "Count",alpha=1,) +
	labs(x="com_sec_android_iap_permission_BILLING",y ="Counts" , title= "Frequency chart for variable com_sec_android_iap_permission_BILLING ") +
	xlab("com_sec_android_iap_permission_BILLING") + 
	ylab("Counts") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Frequency Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=com_htc_launcher_permission_UPDATE_SHORTCUT  )) +
	geom_freqpoly(stat = "Count",alpha=1,) +
	labs(x="com_htc_launcher_permission_UPDATE_SHORTCUT",y ="Counts" , title= "Frequency chart for variable com_htc_launcher_permission_UPDATE_SHORTCUT ") +
	xlab("com_htc_launcher_permission_UPDATE_SHORTCUT") + 
	ylab("Counts") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Frequency Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=com_sec_android_provider_badge_permission_WRITE  )) +
	geom_freqpoly(stat = "Count",alpha=1,) +
	labs(x="com_sec_android_provider_badge_permission_WRITE",y ="Counts" , title= "Frequency chart for variable com_sec_android_provider_badge_permission_WRITE ") +
	xlab("com_sec_android_provider_badge_permission_WRITE") + 
	ylab("Counts") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Frequency Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_ACCESS_NETWORK_STATE  )) +
	geom_freqpoly(stat = "Count",alpha=1,) +
	labs(x="android_permission_ACCESS_NETWORK_STATE",y ="Counts" , title= "Frequency chart for variable android_permission_ACCESS_NETWORK_STATE ") +
	xlab("android_permission_ACCESS_NETWORK_STATE") + 
	ylab("Counts") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Frequency Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=com_google_android_finsky_permission_BIND_GET_INSTALL_REFERRER_SERVICE  )) +
	geom_freqpoly(stat = "Count",alpha=1,) +
	labs(x="com_google_android_finsky_permission_BIND_GET_INSTALL_REFERRER_SERVICE",y ="Counts" , title= "Frequency chart for variable com_google_android_finsky_permission_BIND_GET_INSTALL_REFERRER_SERVICE ") +
	xlab("com_google_android_finsky_permission_BIND_GET_INSTALL_REFERRER_SERVICE") + 
	ylab("Counts") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Frequency Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=com_huawei_android_launcher_permission_READ_SETTINGS  )) +
	geom_freqpoly(stat = "Count",alpha=1,) +
	labs(x="com_huawei_android_launcher_permission_READ_SETTINGS",y ="Counts" , title= "Frequency chart for variable com_huawei_android_launcher_permission_READ_SETTINGS ") +
	xlab("com_huawei_android_launcher_permission_READ_SETTINGS") + 
	ylab("Counts") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Frequency Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_READ_SMS  )) +
	geom_freqpoly(stat = "Count",alpha=1,) +
	labs(x="android_permission_READ_SMS",y ="Counts" , title= "Frequency chart for variable android_permission_READ_SMS ") +
	xlab("android_permission_READ_SMS") + 
	ylab("Counts") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```

```{r}
## [Frequency Plot]
require(ggplot2);
require(ggthemes);
ggplot(data=Android_attack_detect, aes(x=android_permission_PROCESS_INCOMING_CALLS  )) +
	geom_freqpoly(stat = "Count",alpha=1,) +
	labs(x="android_permission_PROCESS_INCOMING_CALLS",y ="Counts" , title= "Frequency chart for variable android_permission_PROCESS_INCOMING_CALLS ") +
	xlab("android_permission_PROCESS_INCOMING_CALLS") + 
	ylab("Counts") + 
	theme_grey() + 
	theme(text=element_text(family="sans",
	face="plain",
	color="#000000",size=12,
	hjust=0.5,vjust=0.5))
```
# Correlation Test, multi-variables

```{r}
require(stats);
require(RcmdrMisc);
require(corrplot);
require(DescTools);            
BSkyResults <- BSkyCorrelationMatrix (data= Android_attack_detect,
	 vars = c('android_permission_GET_ACCOUNTS','com_sonyericsson_home_permission_BROADCAST_BADGE','android_permission_READ_PROFILE','android_permission_MANAGE_ACCOUNTS','android_permission_WRITE_SYNC_SETTINGS','android_permission_READ_EXTERNAL_STORAGE','android_permission_RECEIVE_SMS','com_android_launcher_permission_READ_SETTINGS','android_permission_WRITE_SETTINGS','com_google_android_providers_gsf_permission_READ_GSERVICES','android_permission_DOWNLOAD_WITHOUT_NOTIFICATION','android_permission_GET_TASKS','android_permission_WRITE_EXTERNAL_STORAGE','android_permission_RECORD_AUDIO','com_huawei_android_launcher_permission_CHANGE_BADGE','com_oppo_launcher_permission_READ_SETTINGS','android_permission_CHANGE_NETWORK_STATE','com_android_launcher_permission_INSTALL_SHORTCUT','android_permission_android_permission_READ_PHONE_STATE','android_permission_CALL_PHONE','android_permission_WRITE_CONTACTS','android_permission_READ_PHONE_STATE','com_samsung_android_providers_context_permission_WRITE_USE_APP_FEATURE_SURVEY','android_permission_MODIFY_AUDIO_SETTINGS','android_permission_ACCESS_LOCATION_EXTRA_COMMANDS','android_permission_INTERNET','android_permission_MOUNT_UNMOUNT_FILESYSTEMS','com_majeur_launcher_permission_UPDATE_BADGE','android_permission_AUTHENTICATE_ACCOUNTS','com_htc_launcher_permission_READ_SETTINGS','android_permission_ACCESS_WIFI_STATE','android_permission_FLASHLIGHT','android_permission_READ_APP_BADGE','android_permission_USE_CREDENTIALS','android_permission_CHANGE_CONFIGURATION','android_permission_READ_SYNC_SETTINGS','android_permission_BROADCAST_STICKY','com_anddoes_launcher_permission_UPDATE_COUNT','com_android_alarm_permission_SET_ALARM','com_google_android_c2dm_permission_RECEIVE','android_permission_KILL_BACKGROUND_PROCESSES','com_sonymobile_home_permission_PROVIDER_INSERT_BADGE','com_sec_android_provider_badge_permission_READ','android_permission_WRITE_CALENDAR','android_permission_SEND_SMS','com_huawei_android_launcher_permission_WRITE_SETTINGS','android_permission_REQUEST_INSTALL_PACKAGES','android_permission_SET_WALLPAPER_HINTS','android_permission_SET_WALLPAPER','com_oppo_launcher_permission_WRITE_SETTINGS','android_permission_RESTART_PACKAGES','me_everything_badger_permission_BADGE_COUNT_WRITE','android_permission_ACCESS_MOCK_LOCATION','android_permission_ACCESS_COARSE_LOCATION','android_permission_READ_LOGS','com_google_android_gms_permission_ACTIVITY_RECOGNITION','com_amazon_device_messaging_permission_RECEIVE','android_permission_SYSTEM_ALERT_WINDOW','android_permission_DISABLE_KEYGUARD','android_permission_USE_FINGERPRINT','me_everything_badger_permission_BADGE_COUNT_READ','android_permission_CHANGE_WIFI_STATE','android_permission_READ_CONTACTS','com_android_vending_BILLING','android_permission_READ_CALENDAR','android_permission_RECEIVE_BOOT_COMPLETED','android_permission_WAKE_LOCK','android_permission_ACCESS_FINE_LOCATION','android_permission_BLUETOOTH','android_permission_CAMERA','com_android_vending_CHECK_LICENSE','android_permission_FOREGROUND_SERVICE','android_permission_BLUETOOTH_ADMIN','android_permission_VIBRATE','android_permission_NFC','android_permission_RECEIVE_USER_PRESENT','android_permission_CLEAR_APP_CACHE','com_android_launcher_permission_UNINSTALL_SHORTCUT','com_sec_android_iap_permission_BILLING','com_htc_launcher_permission_UPDATE_SHORTCUT','com_sec_android_provider_badge_permission_WRITE','android_permission_ACCESS_NETWORK_STATE','com_google_android_finsky_permission_BIND_GET_INSTALL_REFERRER_SERVICE','com_huawei_android_launcher_permission_READ_SETTINGS','android_permission_READ_SMS','android_permission_PROCESS_INCOMING_CALLS'), 
	correlationType = "Pearson", missingValues = "complete.obs",
    pValue = "bothP")
BSkyFormat(BSkyResults)
BSkyPlotCorrelationMatrix (data= Android_attack_detect,
	 vars = c('android_permission_GET_ACCOUNTS','com_sonyericsson_home_permission_BROADCAST_BADGE','android_permission_READ_PROFILE','android_permission_MANAGE_ACCOUNTS','android_permission_WRITE_SYNC_SETTINGS','android_permission_READ_EXTERNAL_STORAGE','android_permission_RECEIVE_SMS','com_android_launcher_permission_READ_SETTINGS','android_permission_WRITE_SETTINGS','com_google_android_providers_gsf_permission_READ_GSERVICES','android_permission_DOWNLOAD_WITHOUT_NOTIFICATION','android_permission_GET_TASKS','android_permission_WRITE_EXTERNAL_STORAGE','android_permission_RECORD_AUDIO','com_huawei_android_launcher_permission_CHANGE_BADGE','com_oppo_launcher_permission_READ_SETTINGS','android_permission_CHANGE_NETWORK_STATE','com_android_launcher_permission_INSTALL_SHORTCUT','android_permission_android_permission_READ_PHONE_STATE','android_permission_CALL_PHONE','android_permission_WRITE_CONTACTS','android_permission_READ_PHONE_STATE','com_samsung_android_providers_context_permission_WRITE_USE_APP_FEATURE_SURVEY','android_permission_MODIFY_AUDIO_SETTINGS','android_permission_ACCESS_LOCATION_EXTRA_COMMANDS','android_permission_INTERNET','android_permission_MOUNT_UNMOUNT_FILESYSTEMS','com_majeur_launcher_permission_UPDATE_BADGE','android_permission_AUTHENTICATE_ACCOUNTS','com_htc_launcher_permission_READ_SETTINGS','android_permission_ACCESS_WIFI_STATE','android_permission_FLASHLIGHT','android_permission_READ_APP_BADGE','android_permission_USE_CREDENTIALS','android_permission_CHANGE_CONFIGURATION','android_permission_READ_SYNC_SETTINGS','android_permission_BROADCAST_STICKY','com_anddoes_launcher_permission_UPDATE_COUNT','com_android_alarm_permission_SET_ALARM','com_google_android_c2dm_permission_RECEIVE','android_permission_KILL_BACKGROUND_PROCESSES','com_sonymobile_home_permission_PROVIDER_INSERT_BADGE','com_sec_android_provider_badge_permission_READ','android_permission_WRITE_CALENDAR','android_permission_SEND_SMS','com_huawei_android_launcher_permission_WRITE_SETTINGS','android_permission_REQUEST_INSTALL_PACKAGES','android_permission_SET_WALLPAPER_HINTS','android_permission_SET_WALLPAPER','com_oppo_launcher_permission_WRITE_SETTINGS','android_permission_RESTART_PACKAGES','me_everything_badger_permission_BADGE_COUNT_WRITE','android_permission_ACCESS_MOCK_LOCATION','android_permission_ACCESS_COARSE_LOCATION','android_permission_READ_LOGS','com_google_android_gms_permission_ACTIVITY_RECOGNITION','com_amazon_device_messaging_permission_RECEIVE','android_permission_SYSTEM_ALERT_WINDOW','android_permission_DISABLE_KEYGUARD','android_permission_USE_FINGERPRINT','me_everything_badger_permission_BADGE_COUNT_READ','android_permission_CHANGE_WIFI_STATE','android_permission_READ_CONTACTS','com_android_vending_BILLING','android_permission_READ_CALENDAR','android_permission_RECEIVE_BOOT_COMPLETED','android_permission_WAKE_LOCK','android_permission_ACCESS_FINE_LOCATION','android_permission_BLUETOOTH','android_permission_CAMERA','com_android_vending_CHECK_LICENSE','android_permission_FOREGROUND_SERVICE','android_permission_BLUETOOTH_ADMIN','android_permission_VIBRATE','android_permission_NFC','android_permission_RECEIVE_USER_PRESENT','android_permission_CLEAR_APP_CACHE','com_android_launcher_permission_UNINSTALL_SHORTCUT','com_sec_android_iap_permission_BILLING','com_htc_launcher_permission_UPDATE_SHORTCUT','com_sec_android_provider_badge_permission_WRITE','android_permission_ACCESS_NETWORK_STATE','com_google_android_finsky_permission_BIND_GET_INSTALL_REFERRER_SERVICE','com_huawei_android_launcher_permission_READ_SETTINGS','android_permission_READ_SMS','android_permission_PROCESS_INCOMING_CALLS'), 
	correlationType = "Pearson", missingValues = "complete.obs",
    visualizeCorrelation = TRUE, 
	plotWeb = TRUE)
if (exists('BSkyResults')){rm(BSkyResults)}

```
